// <auto-generated />
using System;
using ExaminerPaymentSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExaminerPaymentSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250311112857_changet tands")]
    partial class changettands
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExaminerPaymentSystem.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Activated")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUBKEY")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ExaminerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IDNumber")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Data.ApplicationUserDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ZImSecStaff");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Common.AuditTrail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffectedTable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Common.DateRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DateRange");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Common.LastNumberDatabase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MaxExaminerCode");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.DeletedTandS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedOrRejectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TANDSCODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TANDSCODE1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TANDSCODE1");

                    b.ToTable("DeletedTandS");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.Examiner", b =>
                {
                    b.Property<string>("EMS_NATIONAL_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_ACCOUNT_NO_FCA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_ACCOUNT_NO_ZWL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_ADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_ADDRESS2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_ADDRESS3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_BANK_CODE_FCA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_BANK_CODE_ZWL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_BANK_NAME_FCA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_BANK_NAME_ZWL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_BRANCH_CODE_FCA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_BRANCH_CODE_ZWL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_BRANCH_NAME_FCA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_BRANCH_NAME_ZWL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_COMMENTS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_DATE_OF_JOINING")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_DISTRICT_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_ECT_EXAMINER_CAT_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXAMINER_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXAMINER_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXAMINER_NUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXM_SUPERORD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXPERIENCE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_LAST_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_LEVEL_OF_EXAM_MARKED")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_MARKING_EXPERIENCE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_MARKING_REG_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_PAPER_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_PERFORMANCE_INDEX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_PHONE_BUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_PHONE_HOME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_QUALIFICATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_REGION_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SELECTED_FLAG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SEL_COORDINATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SEL_GRADE_REVIEW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SEL_GRADING")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SEX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUBKEY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUB_SUB_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_TAX_ID_NUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_WORK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_WORK_ADD1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_WORK_ADD2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_WORK_ADD3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_YEAR_TRAINED")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EMS_NATIONAL_ID");

                    b.ToTable("EXM_EXAMINER_MASTER");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.ExaminerScriptsMarked", b =>
                {
                    b.Property<string>("EMS_SUBKEY")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AttendanceStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendanceStatusBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendanceStatusDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CAPTURING_FEES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("COORDINATION_FEES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EMS_ACTIVITY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_APPROVED_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_APPROVED_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_APPROVED_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_CAPTURINGROLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_CENTRE_SUPERVISOR_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_CENTRE_SUPERVISOR_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_CENTRE_SUPERVISOR_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_CERTIFIED_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_CERTIFIED_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_CERTIFIED_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_COMPILED_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_COMPILED_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_COMPILED_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_ECT_EXAMINER_CAT_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXAMINER_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXAMINER_NUMBER")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXM_SUPERORD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_MARKING_REG_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_NATIONAL_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EMS_PAPER_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUB_SUB_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GRAND_TOTAL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MODERATION_FEES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RESPONSIBILITY_FEES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RecommendedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterStatusBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterStatusDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SCRIPTS_MARKED")
                        .HasColumnType("int");

                    b.Property<decimal?>("SCRIPT_RATE")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EMS_SUBKEY");

                    b.HasIndex("EMS_NATIONAL_ID");

                    b.HasIndex("EMS_SUBKEY")
                        .IsUnique();

                    b.ToTable("EXAMINER_TRANSACTIONS");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.RegisterDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttendanceStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendanceStatusBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendanceUpdateDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUBKEY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RecommendedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IDNumber")
                        .IsUnique()
                        .HasFilter("[IDNumber] IS NOT NULL");

                    b.ToTable("ExaminerRegister");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.TandS", b =>
                {
                    b.Property<string>("TANDSCODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ACCOUNTS_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACCOUNTS_REVIEW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACCOUNTS_REVIEW_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACCOUNTS_REVIEW_COMMENT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACCOUNTS_REVIEW_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACCOUNTS_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACCOUNTS_STATUS_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ADJ_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ADJ_TOTAL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CENTRE_SUPERVISOR_COMMENT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CENTRE_SUPERVISOR_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CENTRE_SUPERVISOR_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CENTRE_SUPERVISOR_STATUS_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DATE_ADJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXAMINER_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_NATIONAL_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EMS_PURPOSEOFJOURNEY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUBKEY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EMS_TOTAL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EMS_VENUE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnBackBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnBackStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATUS_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATUS_COMMENT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATUS_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUBJECT_MANAGER_COMMENT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUBJECT_MANAGER_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUBJECT_MANAGER_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUBJECT_MANAGER_STATUS_BY")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TANDSCODE");

                    b.HasIndex("EMS_NATIONAL_ID");

                    b.ToTable("TRAVELLING_AND_SUBSISTENCE_CLAIM");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.TandSAdvance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ADJ_ADV_ACCOMMODATION_NONRES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_ADV_ACCOMMODATION_RES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_ADV_BREAKFAST")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_ADV_DINNER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_ADV_LUNCH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_ADV_OVERNIGHTALLOWANCE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_ADV_TEAS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_ADV_TOTAL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_ADV_TRANSPORT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADV_ACCOMMODATION_NONRES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADV_ACCOMMODATION_RES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADV_BREAKFAST")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADV_DINNER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADV_LUNCH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADV_OVERNIGHTALLOWANCE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ADV_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ADV_TEAS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADV_TOTAL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADV_TRANSPORT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EMS_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXAMINER_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_NATIONAL_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUBKEY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TANDSCODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TANDSCODE")
                        .IsUnique();

                    b.ToTable("TRAVELLING_AND_SUBSISTENCE_ADVANCES");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.TandSAdvanceFees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("FEE_ACCOMMODATION_NONRES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FEE_ACCOMMODATION_RES")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FEE_BREAKFAST")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FEE_DINNER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FEE_LUNCH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FEE_OVERNIGHTALLOWANCE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FEE_TEA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FEE_TRANSPORT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TRAVELLING_AND_SUBSISTENCE_FEES");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.TandSDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ADJ_ACCOMMODATION")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_BUSFARE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ADJ_BY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ADJ_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ADJ_DINNER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_LUNCH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ADJ_TOTAL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EMS_ACCOMMODATION")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EMS_ARRIVAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EMS_BUSFARE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EMS_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_DEPARTURE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EMS_DINNER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EMS_EXAMINER_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EMS_LUNCH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EMS_NATIONAL_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_PLACE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUBKEY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EMS_TOTAL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TANDSCODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TANDSCODE");

                    b.ToTable("TRAVELLING_AND_SUBSISTENCE_DETAILS");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.TandSFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_EXAMINER_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_NATIONAL_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUBKEY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TANDSCODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TANDSCODE");

                    b.ToTable("TRAVELLING_AND_SUBSISTENCE_FILES");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.AdvanceComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedOrRejectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TANDSCODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TANDSCODE");

                    b.ToTable("AdvanceComments");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.Apportionment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MKS_PAPER_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MKS_SUBJECT_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NUMBER_OF_CANDIDATES")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PPR_PAPER_DESC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUB_SUBJECT_DESC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("APPORTIONMENT");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.BankData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BB_BRANCH_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BB_BRANCH_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B_BANK_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B_BANK_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BANKING_DATA");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.BrailleTranscriptionRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ALevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Grade7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OLevel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Braille_Transcription_Rate");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.CategoryMarkingRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ECT_EXAMINER_CAT_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ECT_EXAMINER_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ECT_H_LEVEL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CAN_CATEGORY_RATE");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.CategoryRate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("COORD_FEES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_ECT_EXAMINER_CAT_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOD_FEES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAT_REP_ALLOWANCE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PPR_EXAM_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUPER_FEES")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EXM_CATEGORY_MARKING_RATE");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.EntriesData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppointedScripts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BMS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntriesData");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.ExamCodes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ACTIVATED_SESSION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXM_CLOSE_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXM_EXAM_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXM_EXAM_LEVEL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXM_EXAM_SESSION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXM_EXAM_YEAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXM_START_DATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXM_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CAN_EXAM");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.ExaminerSubject", b =>
                {
                    b.Property<string>("EMS_NATIONAL_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EMS_EXAMINER_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_PAPER_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUBKEY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMS_SUB_SUB_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminerEMS_NATIONAL_ID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EMS_NATIONAL_ID");

                    b.HasIndex("ExaminerEMS_NATIONAL_ID");

                    b.ToTable("ExaminerSubject");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.MarksCaptured", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AbsentScripts")
                        .HasColumnType("int");

                    b.Property<int>("AccountsTotalScriptCaptured")
                        .HasColumnType("int");

                    b.Property<int>("ApportionedScripts")
                        .HasColumnType("int");

                    b.Property<string>("ExamCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Exceptions")
                        .HasColumnType("int");

                    b.Property<string>("PaperCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PirateCandidates")
                        .HasColumnType("int");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScriptMarked")
                        .HasColumnType("int");

                    b.Property<string>("SubjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalScriptsCaptured")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EXM_SCRIPT_CAPTURED");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.PaperMarkingRate", b =>
                {
                    b.Property<string>("SUB_SUB_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PPR_EXAM_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PPR_MARKING_RATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PPR_PAPER_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PPR_PAPER_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUB_SUBJECT_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUB_SUBJECT_DESC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SUB_SUB_ID");

                    b.ToTable("CAN_PAPER_MARKING_RATE");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.RateAndTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CurrentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WHT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("RATE_AND_TAX_INFO");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.ReturnTandS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedOrRejectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TANDSCODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TANDSCODE1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TANDSCODE1");

                    b.ToTable("ReturnedTandS");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.SubjectVenue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PaperCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubjectVenue");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.Subjects", b =>
                {
                    b.Property<string>("SUB_SUB_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SUB_SUBJECT_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUB_SUBJECT_DESC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SUB_SUB_ID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.ValidateTandS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompiledBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompiledDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminerCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VALIDATETANDS");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.Venue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VENUES");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Data.ApplicationUser", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.Examiner", "Examiner")
                        .WithOne("ApplicationUser")
                        .HasForeignKey("ExaminerPaymentSystem.Data.ApplicationUser", "IDNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Examiner");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Common.AuditTrail", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.DeletedTandS", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.TandS", "TandS")
                        .WithMany()
                        .HasForeignKey("TANDSCODE1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TandS");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.ExaminerScriptsMarked", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.Examiner", "Examiner")
                        .WithMany("ExaminerScriptsMarkeds")
                        .HasForeignKey("EMS_NATIONAL_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examiner");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.RegisterDto", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.Examiner", "Examiner")
                        .WithOne("RegisterDto")
                        .HasForeignKey("ExaminerPaymentSystem.Models.Major.RegisterDto", "IDNumber")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Examiner");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.TandS", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.Examiner", "Examiner")
                        .WithMany("TandSs")
                        .HasForeignKey("EMS_NATIONAL_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Examiner");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.TandSAdvance", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.TandS", "TandS")
                        .WithOne("TandSAdvance")
                        .HasForeignKey("ExaminerPaymentSystem.Models.Major.TandSAdvance", "TANDSCODE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TandS");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.TandSDetail", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.TandS", "TandS")
                        .WithMany("TandSDetails")
                        .HasForeignKey("TANDSCODE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TandS");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.TandSFile", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.TandS", "TandS")
                        .WithMany("TandSFiles")
                        .HasForeignKey("TANDSCODE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TandS");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.AdvanceComment", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.TandS", "TandS")
                        .WithMany()
                        .HasForeignKey("TANDSCODE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TandS");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.ExaminerSubject", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.Examiner", "Examiner")
                        .WithMany("ExaminerSubjects")
                        .HasForeignKey("ExaminerEMS_NATIONAL_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Examiner");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Other.ReturnTandS", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Models.Major.TandS", "TandS")
                        .WithMany()
                        .HasForeignKey("TANDSCODE1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TandS");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ExaminerPaymentSystem.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ExaminerPaymentSystem.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.Examiner", b =>
                {
                    b.Navigation("ApplicationUser")
                        .IsRequired();

                    b.Navigation("ExaminerScriptsMarkeds");

                    b.Navigation("ExaminerSubjects");

                    b.Navigation("RegisterDto")
                        .IsRequired();

                    b.Navigation("TandSs");
                });

            modelBuilder.Entity("ExaminerPaymentSystem.Models.Major.TandS", b =>
                {
                    b.Navigation("TandSAdvance")
                        .IsRequired();

                    b.Navigation("TandSDetails");

                    b.Navigation("TandSFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
