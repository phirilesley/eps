@inject SignInManager<ApplicationUser> SignInManager
@model ClusterReportViewModel

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
    :root {
        --primary: #153355;
        --primary-light: #e8f1ff;
        --secondary: #6f42c1;
        --success: #1cc88a;
        --info: #36b9cc;
        --warning: #f6c23e;
        --danger: #e74a3b;
        --light: #f8f9fc;
        --dark: #5a5c69;
        --gray-100: #f8f9fc;
        --gray-200: #eaecf4;
        --gray-300: #dddfeb;
        --gray-400: #d1d3e2;
        --gray-500: #b7b9cc;
        --gray-600: #858796;
        --gray-700: #6e707e;
        --gray-800: #5a5c69;
        --gray-900: #3a3b45;
    }

    body {
        background-color: #f8f9fc;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

    }



    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);
        margin-bottom: 1.5rem;
        overflow: hidden;
    }

    .card-header {
        background-color: white;
        border-bottom: 1px solid var(--gray-200);
        padding: 1rem 1.5rem;
        font-weight: 600;
        color: var(--primary);
    }

    .cluster-container {
        background: white;
        border-radius: 10px;
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .cluster-header {
   background-color: #e2eaeb;
        color: black;
        padding: 1rem 1.5rem;
        display: flex;
        align-items: center;
        font-weight: 600;
    }

    .cluster-icon {
        background: rgba(255, 255, 255, 0.2);
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 12px;
    }

    .center-row {
        display: flex;
        border-bottom: 1px solid var(--gray-200);
        padding: 1.25rem 1.5rem;
        transition: background-color 0.2s;
    }

        .center-row:last-child {
            border-bottom: none;
        }

        .center-row:hover {
            background-color: var(--gray-100);
        }

    .center-name {
        flex: 0 0 30%;
        padding-right: 20px;
        font-weight: 600;
        color: var(--gray-800);
        display: flex;
        align-items: flex-start;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .center-name i {
            margin-right: 10px;
            color: var(--primary);
            margin-top: 4px;
        }

    .personnel-list {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .personnel-item {
        display: flex;
        align-items: center;
    }

    .personnel-role {
        flex: 0 0 180px;
        font-weight: 500;
        color: var(--gray-600);
        font-size: 0.9rem;
    }

    .personnel-name {
        flex: 1;
        font-weight: 500;
        color: var(--gray-800);
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .nav-tabs .nav-link {
        color: var(--gray-700);
        font-weight: 500;
        padding: 0.75rem 1.25rem;
        border: none;
        border-bottom: 3px solid transparent;
    }

        .nav-tabs .nav-link.active {
            color: var(--primary);
            font-weight: 600;
            border-bottom: 3px solid var(--primary);
            background: transparent;
        }

    .filters {
        background-color: white;
        border-radius: 10px;
        padding: 1.5rem;
        margin-bottom: 20px;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);
    }

    .export-btn {
        background: #153355;
        border: none;
        padding: 0.5rem 1.25rem;
        border-radius: 6px;
        color: black;
        font-weight: 500;
        display: flex;
        align-items: center;
        transition: all 0.2s;
    }

        .export-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            color: white;
        }

    .page-title {
        font-weight: 700;
        color: var(--gray-800);
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: var(--gray-600);
        margin-bottom: 1.5rem;
    }

    .badge-cluster {
        background-color: var(--info);
        font-size: 0.75rem;
        padding: 0.35rem 0.65rem;
        border-radius: 50rem;
    }

    .badge-resident {
        background-color: var(--success);
        font-size: 0.75rem;
        padding: 0.35rem 0.65rem;
        border-radius: 50rem;
    }

    .badge-assigned {
        background-color: var(--success);
        font-size: 0.75rem;
        padding: 0.35rem 0.65rem;
        border-radius: 50rem;
    }

    .badge-unassigned {
        background-color: var(--danger);
        font-size: 0.75rem;
        padding: 0.35rem 0.65rem;
        border-radius: 50rem;
    }

    .thin-stats-container {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        margin-bottom: 25px;
    }

    .thin-stat-box {
        flex: 1;
        min-width: 200px;
        background: white;
        border-radius: 8px;
        padding: 12px 15px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.08);
        display: flex;
        align-items: center;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .thin-stat-box:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.12);
        }

    .stat-icon {
        width: 38px;
        height: 38px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        font-size: 16px;
    }

    .stat-content {
        flex: 1;
    }

    .stat-value {
        font-size: 20px;
        font-weight: 700;
        margin: 0;
        line-height: 1.2;
    }

    .stat-label {
        font-size: 12px;
        color: #6c757d;
        margin: 0;
        font-weight: 500;
    }

    .primary-icon {
        background-color: rgba(78, 115, 223, 0.15);
        color: var(--primary);
    }

    .info-icon {
        background-color: rgba(54, 185, 204, 0.15);
        color: var(--info);
    }

    .success-icon {
        background-color: rgba(28, 200, 138, 0.15);
        color: var(--success);
    }

    .danger-icon {
        background-color: rgba(231, 74, 59, 0.15);
        color: var(--danger);
    }

    .title {
        font-weight: 600;
        margin-bottom: 15px;
        color: #495057;
    }

    /* Fix for tab content display */
    .tab-content > .tab-pane {
        display: block;
        height: 0;
        overflow: hidden;
    }

    .tab-content > .active {
        height: auto;
        overflow: visible;
    }

    /* Ensure proper table styling */
    .table th {
        border-top: none;
        font-weight: 600;
        color: var(--gray-700);
        background-color: var(--gray-100);
    }

    .table-hover tbody tr:hover {
        background-color: var(--gray-100);
    }

    /* Search and filter styles */
    .search-container {
        display: flex;
        align-items: center;
        background: var(--gray-100);
        border-radius: 20px;
        padding: 5px 15px;
        border: 1px solid var(--gray-300);
        transition: all 0.3s;
    }

    .search-container:focus-within {
        border-color: var(--primary);
        box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
    }

    .search-input {
        border: none;
        background: transparent;
        outline: none;
        padding: 5px;
        min-width: 250px;
    }

    .search-filter-btn {
        background: none;
        border: no ne;
        color: var(--gray-600);
        cursor: pointer;
        padding: 5px 8px;
        border-radius: 50%;
        transition: all 0.3s;
    }

    .search-filter-btn:hover {
        background: var(--gray-200);
        color: var(--primary);
    }

    .filter-dropdown {
        position: absolute;
        top: 100%;
        right: 0;
        background: white;
        border-radius: 8px;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        padding: 15px;
        z-index: 1000;
        min-width: 250px;
        margin-top: 10px;
        display: none;
    }

    .filter-dropdown.show {
        display: block;
    }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 15px;
    }

    .results-section {
        display: none;
    }

    .results-visible {
        display: block;
    }

    .apply-filters-btn {
        background: linear-gradient(90deg, var(--primary) 0%, #2e59d9 100%);
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        color: white;
        font-weight: 600;
        display: flex;
        align-items: center;
        transition: all 0.2s;
        margin-top: 20px;
        width: 100%;
        justify-content: center;
    }

    .apply-filters-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        color: white;
    }

    .no-data-message {
        text-align: center;
        padding: 40px;
        color: var(--gray-600);
    }

    .no-data-message i {
        font-size: 3rem;
        margin-bottom: 15px;
        color: var(--gray-400);
    }

    .badge.bg-pink {
        background-color: #ff69b4;
        color: white;
    }
</style>

<div class="container">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <div>
            <h1 class="page-title">Cluster Assignment Report</h1>
            <p class="page-subtitle">Apply filters to view cluster assignments and reports</p>
        </div>
    </div>

    <!-- Filters Section (Always Visible) -->
    <div class="filters">
        <div class="row">

          
                 @if (User.IsInRole("Accounts") || User.IsInRole("Admin") || User.IsInRole("HR")  || User.IsInRole("PeerReviewer"))
            {
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="regionFilter" class="form-label mb-1">Region</label>
                        <select id="regionFilter" class="form-select" required>
                            <option value="All">All Regions</option>
                            <option value="01">01 - Harare</option>
                            <option value="02">02 - Manicaland</option>
                            <option value="03">03 - Mashonaland East</option>
                            <option value="04">04 - Matabeleland North</option>
                            <option value="05">05 - Midlands</option>
                            <option value="06">06 - Masvingo</option>
                            <option value="07">07 - Mashonaland Central</option>
                            <option value="08">08 - Mashonaland West</option>
                            <option value="09">09 - Matabeleland South</option>
                            <option value="10">10 - Bulawayo</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="districtFilter" class="form-label mb-1">District</label>
                         <select id="districtFilter" class="form-select" required>
            <option value="All">All Districts</option>
                        </select>
                    </div>
                </div>
            }


                  @if (User.IsInRole("RegionalManager"))
            {
<div class="col-md-3">
    <div class="form-group">
        <label for="districtFilter" class="form-label mb-1">District</label>
        <select id="districtFilter" class="form-select" required>
            <option value="All">All Districts</option>
            @if (ViewBag.Districts != null)
            {
                @foreach (var district in ViewBag.Districts)
                {
                    <option value="@district.Value">@district.Text</option>
                }
            }
            else
            {
                <option value="" disabled>No districts available</option>
            }
        </select>
    </div>
</div>

}
<div class="col-md-3">
    <div class="form-group">
        <label for="phaseFilter" class="form-label mb-1">Phase</label>
        <select id="phaseFilter" class="form-select" required>
            <option value="">--Select Phase---</option>
            @if (ViewBag.Phases != null)
            {
                @foreach (var phase in ViewBag.Phases)
                {
                    <option value="@phase.Value">@phase.Text</option>
                }
            }
            else
            {
                <option value="" disabled>No phases available</option>
            }
        </select>
    </div>
</div>
<div class="col-md-3">
    <div class="form-group">
        <label for="sessionFilter" class="form-label mb-1">Session</label>
        <select id="sessionFilter" class="form-select" required>
            <option value="">---Select Session---</option>
            @if (ViewBag.Sessions != null)
            {
                @foreach (var session in ViewBag.Sessions)
                {
                    <option value="@session.Value">@session.Text</option>
                }
            }
            else
            {
                <option value="" disabled>No sessions available</option>
            }
        </select>
    </div>
</div>
       
        </div>

        <div class="row mt-3">
       
            <div class="col-md-4">
                <button class="apply-filters-btn" onclick="applyFilters()">
                    <i class="fas fa-filter me-2"></i>Apply Filters & Show Results
                </button>
            </div>
        </div>
    </div>

    <!-- Results Section (Initially Hidden) -->
    <div id="resultsSection" class="results-section @(Model.Assignments.Any() ? "results-visible" : "")">
        <!-- Thin Stats Boxes -->
        <div class="thin-stats-container">
            <div class="thin-stat-box">
                <div class="stat-icon info-icon">
                    <i class="fas fa-building"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-value">@Model.TotalCentres</h3>
                    <p class="stat-label">Total Centres</p>
                </div>
            </div>

            <div class="thin-stat-box">
                <div class="stat-icon primary-icon">
                    <i class="fas fa-cluster"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-value">@Model.TotalClusters</h3>
                    <p class="stat-label">Total Clusters</p>
                </div>
            </div>

            <div class="thin-stat-box">
                <div class="stat-icon primary-icon">
                    <i class="fas fa-cluster"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-value">@Model.TotalIsResidents</h3>
                    <p class="stat-label">Total Residents</p>
                </div>
            </div>
           

            <div class="thin-stat-box">
                <div class="stat-icon success-icon">
                    <i class="fas fa-user-check"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-value">@Model.AssignedCentres</h3>
                    <p class="stat-label">Assigned Centres</p>
                </div>
            </div>

            <div class="thin-stat-box">
                <div class="stat-icon danger-icon">
                    <i class="fas fa-user-times"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-value">@Model.UnassignedCentres</h3>
                    <p class="stat-label">Unassigned Centres</p>
                </div>
            </div>
        </div>

        <!-- Tabs -->
        <ul class="nav nav-tabs mb-4" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="assignments-tab" data-bs-toggle="tab" data-bs-target="#assignments" type="button" role="tab">Cluster View</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="report-tab" data-bs-toggle="tab" data-bs-target="#report" type="button" role="tab">Cluster Report</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="status-tab" data-bs-toggle="tab" data-bs-target="#status" type="button" role="tab">Clusters Status</button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content" id="myTabContent">
            <!-- Cluster View Tab -->
            <div class="tab-pane fade" id="assignments" role="tabpanel">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
                        <h5 class="m-0"><i class="fas fa-file-alt me-2"></i>Cluster Assignment View</h5>
                        <button class="export-btn text-white" onclick="exportReport()">
                            <i class="fas fa-file-export me-2"></i>Export Report
                        </button>
                    </div>
                    <div class="card-body">
                        @if (Model.Assignments.Any())
                        {
                            <!-- Group assignments by cluster -->
                          
                                var clusterGroups = Model.Assignments
                                    .Where(a => a.ClusterName != "N/A")
                                    .GroupBy(a => a.ClusterName)
                                    .ToList();
                                
                                var residentCentres = Model.Assignments
                                    .Where(a => a.ClusterName == "N/A")
                                    .ToList();
                            
                            
                            <!-- Cluster Centres -->
                            @foreach (var clusterGroup in clusterGroups)
                            {
                                var cluster = clusterGroup.First();
                                <div class="cluster-container">
                                    <div class="cluster-header">
                                        <div class="cluster-icon">
                                            <i class="fas fa-cluster"></i>
                                        </div>
                                        <div>
                                            <div>@cluster.ClusterCode-@cluster.ClusterName</div>
                                            <small>@clusterGroup.Count() Centres   • @cluster.Region • @cluster.District • @cluster.CentreNumber-@cluster.CentreName </small>
                                        </div>
                                    </div>
                                    
                                    @foreach (var centre in clusterGroup)
                                    {
                                        <div class="center-row">
                                            <div class="center-name">
                                                <i class="fas fa-school"></i>
                                                <div>@centre.CentreNumber-@centre.CentreName</div>
                                          
                                            </div>
                                            <div class="personnel-list mx-5">
                                                @if (centre.CentreType == "Cluster")
                                                {
                                                @if (!string.IsNullOrEmpty(centre.ClusterManager))
                                                {
                                                    <div class="personnel-item">
                                                        <div class="personnel-role">Cluster Manager:</div>
                                                        <div class="personnel-name">@centre.ClusterManager</div>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrEmpty(centre.AssistantClusterManager))
                                                {
                                                    <div class="personnel-item">
                                                        <div class="personnel-role">Assistant Cluster Manager:</div>
                                                        <div class="personnel-name">@centre.AssistantClusterManager</div>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrEmpty(centre.ResidentMonitor))
                                                {
                                                    <div class="personnel-item">
                                                        <div class="personnel-role">Resident Monitor:</div>
                                                        <div class="personnel-name">@centre.ResidentMonitor</div>
                                                    </div>
                                                    }
                                                }
                                                else
                                                {
                                                    @if (!string.IsNullOrEmpty(centre.ResidentMonitor))
                                                    {
                                                        <div class="personnel-item">
                                                            <div class="personnel-role">Resident Monitor:</div>
                                                            <div class="personnel-name">@centre.ResidentMonitor</div>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            
                            <!-- Resident Centres (No Cluster) -->
                            @if (residentCentres.Any())
                            {
                                <div class="cluster-container">
                                    <div class="cluster-header">
                                        <div class="cluster-icon">
                                            <i class="fas fa-building"></i>
                                        </div>
                                        <div>
                                            <div>Resident Centres (No Cluster)</div>
                                            <small>@residentCentres.Count Centres • </small>
                                        </div>
                                    </div>
                                    
                                    @foreach (var centre in residentCentres)
                                    {
                                        <div class="center-row">
                                            <div class="center-name">
                                                <i class="fas fa-school"></i>
                                                <div>@centre.CentreNumber-@centre.CentreName</div>
                                           
                                            </div>
                                            <div class="personnel-list mx-5">
                                                @if (!string.IsNullOrEmpty(centre.ResidentMonitor))
                                                {
                                                    <div class="personnel-item">
                                                        <div class="personnel-role">Resident Monitor:</div>
                                                        <div class="personnel-name">@centre.ResidentMonitor</div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <div class="no-data-message">
                                <i class="fas fa-inbox"></i>
                                <h4>No data found</h4>
                                <p>Try adjusting your filters to see results</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Cluster Report Tab -->
            <div class="tab-pane fade show active" id="report" role="tabpanel">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
                        <h5 class="m-0"><i class="fas fa-file-alt me-2"></i>Cluster Assignment Report</h5>
                        <button class="export-btn text-white" onclick="exportReport()">
                            <i class="fas fa-file-export me-2"></i>Export Report
                        </button>
                    </div>
                    <div class="card-body">
                        @if (Model.Assignments.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Cluster/Centre</th>
                                            <th>Type</th>
                                            <th>Cluster Manager</th>
                                            <th>Asst. Cluster Manager</th>
                                            <th>Resident Monitor</th>
                                            <th>Cluster</th>
                                            <th>Region</th>
                                            <th>District</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var assignment in Model.Assignments)
                                        {
                                            <tr>
                                                <td>@assignment.CentreName</td>
                                                <td>
                                                    @if (assignment.CentreType == "Cluster")
                                                    {
                                                        <span class="badge badge-cluster">Cluster</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-resident">Resident Centre</span>
                                                    }
                                                </td>
                                                <td>@(assignment.ClusterManager ?? "N/A")</td>
                                                <td>@(assignment.AssistantClusterManager ?? "N/A")</td>
                                                <td>@assignment.ResidentMonitor</td>
                                                <td>@(assignment.ClusterName ?? "N/A")</td>
                                                <td>@assignment.Region</td>
                                                <td>@assignment.District</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="no-data-message">
                                <i class="fas fa-inbox"></i>
                                <h4>No data found</h4>
                                <p>Try adjusting your filters to see results</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Assignment Status Tab -->
            <div class="tab-pane fade" id="status" role="tabpanel">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
                        <h5 class="m-0"><i class="fas fa-clipboard-check me-2"></i>Assignment Status Report</h5>
                        <button class="export-btn text-white" onclick="exportReport()">
                            <i class="fas fa-file-export me-2"></i>Export Report
                        </button>
                    </div>
                    <div class="card-body">
                        @if (Model.Assignments.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Centre/Cluster</th>
                                            <th>Type</th>
                                            <th>Status</th>
                                            <th>Region</th>
                                            <th>District</th>
                                            <th>Cluster</th>
                                            <th>Assignment Date</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var assignment in Model.Assignments)
                                        {
                                            <tr>
                                                <td>@assignment.CentreName</td>
                                                <td>
                                                    @if (assignment.CentreType == "Cluster")
                                                    {
                                                        <span class="badge badge-cluster">Cluster</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-resident">Resident Centre</span>
                                                    }
                                                </td>
                                                <td>
                                                    @if (assignment.Status == "Assigned")
                                                    {
                                                        <span class="badge badge-assigned">Assigned</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-unassigned">Unassigned</span>
                                                    }
                                                </td>
                                                <td>@assignment.Region</td>
                                                <td>@assignment.District</td>
                                                <td>@(assignment.ClusterName ?? "N/A")</td>
                                                <td>@(assignment.AssignedDate?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="no-data-message">
                                <i class="fas fa-inbox"></i>
                                <h4>No data found</h4>
                                <p>Try adjusting your filters to see results</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- No filters applied message -->
    @if (!Model.Assignments.Any())
    {
        <div class="card results-section" id="noFiltersMessage">
            <div class="card-body">
                <div class="no-data-message">
                    <i class="fas fa-filter"></i>
                    <h4>Apply filters to view data</h4>
                    <p>Select filters and click "Apply Filters & Show Results" to see cluster assignments</p>
                </div>
            </div>
        </div>
    }
</div>

<!-- Bootstrap & jQuery JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function() {
        // Initialize tab functionality
        $('#myTab button').on('click', function (event) {
            event.preventDefault();
            $(this).tab('show');
        });

        // Update districts when region changes
        $('#regionFilter').change(function() {
            var region = $(this).val();
            
            $.post('@Url.Action("GetDistrictsByRegion", "ExamMonitorsReports")', { region: region }, function(data) {
                var districtSelect = $('#districtFilter');
                
                districtSelect.empty();
                districtSelect.append('<option value="">All Districts</option>');
                
                $.each(data, function(index, item) {
                    districtSelect.append($('<option>', {
                        value: item.value,
                        text: item.text
                    }));
                });
            });
        });

        // Check if we should show results based on URL parameters
        var urlParams = new URLSearchParams(window.location.search);
        if (urlParams.has('searchTerm') || urlParams.has('regionFilter') || 
            urlParams.has('districtFilter') || urlParams.has('phaseFilter') || 
            urlParams.has('sessionFilter')) {
            $('#resultsSection').addClass('results-visible');
            $('#noFiltersMessage').hide();
        }
    });

    function performSearch() {
        var searchTerm = $('#searchInput').val();
        var region = $('#regionFilter').val();
        var district = $('#districtFilter').val();
        var phase = $('#phaseFilter').val();
        var session = $('#sessionFilter').val();
        
        // Build query string
        var params = [];
        if (searchTerm) params.push('searchTerm=' + encodeURIComponent(searchTerm));
        if (region) params.push('regionFilter=' + encodeURIComponent(region));
        if (district) params.push('districtFilter=' + encodeURIComponent(district));
        if (phase) params.push('phaseFilter=' + encodeURIComponent(phase));
        if (session) params.push('sessionFilter=' + encodeURIComponent(session));
        
        window.location.href = '@Url.Action("AssignmentReport", "ExamMonitorsReports")' + 
            (params.length ? '?' + params.join('&') : '');
    }

    function applyFilters() {
        $('#resultsSection').addClass('results-visible');
        $('#noFiltersMessage').hide();
        performSearch();
    }

    function clearFilters() {
        $('#searchInput').val('');
        $('#regionFilter').val('');
        $('#districtFilter').val('');
        $('#phaseFilter').val('');
        $('#sessionFilter').val('');
        
        // Hide results and show the no filters message
        $('#resultsSection').removeClass('results-visible');
        $('#noFiltersMessage').show();
        
        // Clear URL parameters
        window.history.replaceState({}, document.title, window.location.pathname);
    }



    function exportReport() {
        // Implementation for export functionality
        alert('Export functionality would be implemented here');
    }
</script>

       <script>
    $(document).ready(function () {
        $("#regionFilter").change(function () {
            var regionCode = $(this).val();
            var districtDropdown = $("#districtFilter");

            districtDropdown.empty();
            districtDropdown.append('<option value="">All Districts</option>');

            if (regionCode) {
                $.getJSON('/ExamMonitorsReports/GetDistrictsByRegion', { regionCode: regionCode }, function (data) {
                    $.each(data, function (i, district) {
                        districtDropdown.append('<option value="' + district.value + '">' + district.text + '</option>');
                    });
                });
            }
        });
    });
</script>
