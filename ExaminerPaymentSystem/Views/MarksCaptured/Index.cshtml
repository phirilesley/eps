@model MarksCaptured
@using ExaminerPaymentSystem.Data
@using Microsoft.AspNetCore.Identity
@using ExaminerPaymentSystem.Interfaces
@inject SignInManager<ApplicationUser> SignInManager
@inject ISubjectsRepository subjectRepo
@inject IExamCodesRepository examCodeRepo
@inject IPaperMarkingRateRepository papercodesRepo

@{
    ViewBag.Title = "Scripts Data";

    IEnumerable<Subjects> subjects = await subjectRepo.GetAllPaperCodes();
    IEnumerable<ExamCodes> examCodes = await examCodeRepo.GetAllExamCodes();
    var subjectArray = Newtonsoft.Json.JsonConvert.SerializeObject(subjects);
    int currentYear = DateTime.Now.Year;
    int lastYear = currentYear - 1;

    string examCode = ViewBag.ExamCode ?? "";
    string subjectCode = ViewBag.SubjectCode ?? "";
    string paperCode = ViewBag.PaperCode ?? "";
    string regionCode = ViewBag.RegionCode ?? "";
    string activity = ViewBag.Activity ?? "";

}


<script>
    $(document).ready(function () {
    @if (TempData["SuccessMessage"] != null)
    {
        <text>
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: '@TempData["SuccessMessage"]',
                    showConfirmButton: false,
                    timer: 2000
                });
        </text>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <text>
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: '@TempData["ErrorMessage"]',
                    showConfirmButton: true
                });
        </text>
    }
                        });
</script>


<div class="text-center mb-4 mt-4">
    <div class="d-flex align-items-center justify-content-center gap-2">
        <i class="fas fa-marker" style="color: #2a5a8a;"></i>
        <h4 class="fw-bold mb-0" style="color: #153355;">
           Marks Captured Claim Form
            
        </h4>
    </div>
    <hr style="border-top: 1px solid black;
    width: 100px;
    margin: 8px auto;
    ">
</div>

@* <h1 class="mb-3 text-center" style="color:#123255;">Marks Captured Claim Form</h1> *@

<!-- First Form: Search Form -->
<form id="searchForm" asp-action="Search" class="needs-validation mb-5" novalidate>
    <div class="border rounded p-4 mb-3 position-relative" style="border-width: 2px;">
        <div class="position-absolute bg-white px-3" style="top: -12px; left: 15px; z-index: 1; color:#123255;">
            <!-- Optional heading -->
        </div>

        <div class="row mb-3">
            <div class="col-12 col-md-4 mb-3">
                <div class="form-floating">
                    <select asp-for="ExamCode" class="form-control" id="mkExamCode" required>
                        <option value="">-- Select Session --</option>
                        @foreach (var examCod in examCodes)
                        {
                            if (int.TryParse(examCod.EXM_EXAM_YEAR, out int examYear))
                            {
                                if (examCod.ACTIVATED_SESSION == "Activated")
                                {
                                    <option value="@examCod.EXM_EXAM_CODE">@examCod.EXM_EXAM_LEVEL @examCod.EXM_EXAM_SESSION @examCod.EXM_EXAM_YEAR</option>
                                }
                            }
                        }
                    </select>
                    <label asp-for="ExamCode">Exam Session:</label>
                    <span asp-validation-for="ExamCode" class="text-danger"></span>
                </div>
            </div>

            <div class="col-12 col-md-4 mb-3">
                <div class="form-floating">
                    <select asp-for="SubjectCode" class="form-control" id="mkSubject" required>
                        <option value="">-- Select Subject --</option>
                    </select>
                    <label asp-for="SubjectCode">Subject Code:</label>
                
                </div>
            </div>

            <div class="col-12 col-md-4 mb-3">
                <div class="form-floating">
                    <select asp-for="PaperCode" class="form-control" id="mkPaperCode" required>
                        <option value="">-- Select Paper Code --</option>
                    </select>
                    <label asp-for="PaperCode">Paper Code</label>
               
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group" id="mkRegionCodeContainer" style="display: none;">
                    <label for="mkRegionCode" class="form-label">Region Code:</label>
                    <select id="mkRegionCode" name="regionCode" class="form-select">
                        <option value="">--- Select Region Code ---</option>
                        <option value="01">01 - Harare</option>
                        <option value="02">02 - Manicaland</option>
                        <option value="03">03 - Mashonaland East</option>
                        <option value="04">04 - Matabeleland North</option>
                        <option value="05">05 - Midlands</option>
                        <option value="06">06 - Masvingo</option>
                        <option value="07">07 - Mashonaland Central</option>
                        <option value="08">08 - Mashonaland West</option>
                        <option value="09">09 - Matabeleland South</option>
                        <option value="10">10 - Bulawayo</option>
                    </select>
                </div>
            </div>
        </div>

        <button class="btn text-white w-100" type="submit" style="background-color: #153355;">
            <i class="fas fa-search mr-2"></i>
            Search
        </button>
    </div>
</form>

<!-- Second Form: Data Entry Form -->
<div class="border rounded p-4 mb-3 position-relative" style="border-width: 2px;">
    <div class="position-absolute bg-white px-3" style="top: -12px; left: 15px; z-index: 1; color:#123255;">
        <!-- Optional heading -->
    </div>

    <form id="dataEntryForm" asp-action="Save" class="needs-validation mb-5" novalidate>
        <input id="ExamCodee" name="examCode" hidden/>
        <input id="SubjectCodee" name="subjectCode" hidden/>
        <input id="PaperCodee" name="paperCode" hidden/>
        <input id="RegionCodee" name="regionCode" hidden/>

        <div class="row mb-3">
            <div class="col-12 col-md-4 mb-3">
                <div class="form-floating">
                    <input asp-for="ApportionedScripts" class="form-control form-control-sm" readonly />
                    <label asp-for="ApportionedScripts">Apportioned Scripts</label>
                    <span asp-validation-for="ApportionedScripts" class="text-danger"></span>
                </div>
            </div>

            <div class="col-12 col-md-4 mb-3">
                <div class="form-floating">
                    <input asp-for="ScriptMarked" class="form-control form-control-sm" readonly />
                    <label asp-for="ScriptMarked">Scripts Marked</label>
                    <span asp-validation-for="ScriptMarked" class="text-danger"></span>
                </div>
            </div>

            <div class="col-12 col-md-4 mb-3">
                <div class="form-floating">
                    <input asp-for="TotalScriptsCaptured" class="form-control form-control-sm" required />
                    <label asp-for="TotalScriptsCaptured">Marks Captured</label>
                    <span asp-validation-for="TotalScriptsCaptured" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-12 col-md-4 mb-3">
                <div class="form-floating">
                    <input asp-for="AbsentScripts" class="form-control form-control-sm" required />
                    <label asp-for="AbsentScripts">Absent Scripts</label>
                    <span asp-validation-for="AbsentScripts" class="text-danger"></span>
                </div>
            </div>

            <div class="col-12 col-md-4 mb-3">
                <div class="form-floating">
                    <input asp-for="PirateCandidates" class="form-control form-control-sm" required />
                    <label asp-for="PirateCandidates">Pirates</label>
                    <span asp-validation-for="PirateCandidates" class="text-danger"></span>
                </div>
            </div>

            <div class="col-12 col-md-4 mb-3">
                <div class="form-floating">
                    <input asp-for="Exceptions" class="form-control form-control-sm"  required />
                    <label asp-for="Exceptions">Exceptions</label>
                    <span asp-validation-for="Exceptions" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-12 col-md-6 mb-3">
                <button class="btn text-white w-100" type="submit" style="background-color: #153355;">
                    <i class="fas fa-save mr-2"></i>
                    Save
                </button>
            </div>
        </div>
    </form>
</div>















@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

    }


}







<script>
    $(document).ready(function () {
        var subjects = @Html.Raw(subjectArray);

        // Function to populate subject dropdown based on selected exam code
        $('#mkExamCode').change(function () {
            console.log("Exam code selection changed");
            var selectedExamCode = $(this).val();
            console.log("Selected exam code: " + selectedExamCode);
            var subjectSelect = $('#mkSubject');
            subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

            // Filter subjects based on selected exam code and remove duplicates
            var uniqueSubjects = {};
            subjects.forEach(function (subject) {
                var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                if (subSubIdPrefix === selectedExamCode) {
                    uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                }
            });

            // Populate subject dropdown with unique subjects
            Object.keys(uniqueSubjects).forEach(function (key) {
                var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                console.log("Appended subject: " + key);
            });
        });

        // Function to populate paper code dropdown based on selected subject
        $('#mkSubject').change(function () {
            console.log("Subject selection changed");
            var selectedSubjectId = $(this).val();
            console.log("Selected subject ID: " + selectedSubjectId);
            var paperCodeSelect = $('#mkPaperCode');
            paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

            if (selectedSubjectId && selectedSubjectId.length >= 4) {
                var subjectCheck = selectedSubjectId.substring(3, 4);
                console.log("Checking subject at 4th position: " + subjectCheck);

                if (subjectCheck === '7') {
                    console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                    $('#mkRegionCodeContainer').show();
                    $('#mkRegionCode').attr('required', 'required');
                } else {
                    console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                    $('#mkRegionCodeContainer').hide();
                    $('#mkRegionCode').removeAttr('required');
                }
            } else {
                console.log("No subject selected or too short, hiding regionCode dropdown.");
                $('#mkRegionCodeContainer').hide();
                $('#mkRegionCode').removeAttr('required');
            }

            if (selectedSubjectId) {
                // Make an AJAX call to get the paper codes
                $.ajax({
                    url: '@Url.Action("GetPaperCodes", "Subjects")',
                    type: 'GET',
                    data: { subjectCode: selectedSubjectId },
                    success: function (data) {
                        data.forEach(function (paperCode) {
                            paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                            console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching paper codes: " + error);
                    }
                });
            }
        });
    });
</script>


                            <script>
    $(document).ready(function () {
        // Handle the search form submission
        $('#searchForm').on('submit', function (e) {
            e.preventDefault(); // Prevent the default form submission

            // Get the form data
            var formData = $(this).serialize();

            // Send an AJAX request to the server
            $.ajax({
                url: '/MarksCaptured/Search', // Replace with your controller and action
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        console.log(response.data);
                        // Populate the second form with the response data
                        $('#ApportionedScripts').val(response.data.apportionedScripts);
                        $('#ScriptMarked').val(response.data.scriptMarked);
                        $('#TotalScriptsCaptured').val(response.data.totalScriptsCaptured);
                        $('#AbsentScripts').val(response.data.absentScripts);
                        $('#PirateCandidates').val(response.data.pirateCandidates);
                        $('#Exceptions').val(response.data.exceptions);
                  
                        $('#SubjectCodee').val(response.data.subjectCode);
                        $('#ExamCodee').val(response.data.examCode || '');
                        $('#PaperCodee').val(response.data.paperCode || '');
                        $('#RegionCodee').val(response.data.regionCode || ''); // Handle null gracefully

                        // Populate other fields as needed

                        // Show success message with SweetAlert
                        // Swal.fire({
                        //     icon: 'success',
                        //     title: 'Success!',
                        //     text: 'Data fetched successfully.',
                        //     timer: 2000, // Auto-close after 2 seconds
                        //     showConfirmButton: false
                        // });
                    } else {
                        // Show error message with SweetAlert
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: response.message || 'An error occurred while fetching data.',
                        });
                    }
                },
                error: function () {
                    // Show error message with SweetAlert
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'An error occurred while processing your request.',
                    });
                }
            });
        });

        // Handle the data entry form submission
        $('#dataEntryForm').on('submit', function (e) {
            e.preventDefault(); // Prevent the default form submission

            // Get the form data
            var formData = $(this).serialize();

            // Send an AJAX request to the server
            $.ajax({
                url: '/MarksCaptured/Save', // Replace with your controller and action
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        // Show success message with SweetAlert
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Data saved successfully.',
                         
                            showConfirmButton: true,
                            confirmButtonText: 'OK',
                            willClose: () => {
                                // Refresh the page after the alert closes
                                location.reload();
                            }
                        });
                    } else {
                        // Show error message with SweetAlert
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: response.message || 'An error occurred while saving data.',
                        });
                    }
                },
                error: function () {
                    // Show error message with SweetAlert
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'An error occurred while processing your request.',
                    });
                }
            });
        });
    });
                            </script>