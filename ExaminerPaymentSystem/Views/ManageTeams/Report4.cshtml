@model IEnumerable<RegisterViewModel>
@inject SignInManager<ApplicationUser> SignInManager
@inject ISubjectsRepository subjectRepo
@inject IExamCodesRepository examCodeRepo
@inject IPaperMarkingRateRepository papercodesRepo
@inject IActivityRepository activityRepo
@inject IVenueRepository venueRepo

@{
    ViewBag.Title = "Transaction Report";

    IEnumerable<Subjects> subjects = await subjectRepo.GetAllPaperCodes();
    IEnumerable<ExamCodes> examCodes = await examCodeRepo.GetAllExamCodes();
    IEnumerable<Venue> venues = await venueRepo.VenuesGetAll();
    var subjectArray = Newtonsoft.Json.JsonConvert.SerializeObject(subjects);
    IEnumerable<Activity> activities = await activityRepo.GetAllActivitiesAsync();
    int currentYear = DateTime.Now.Year;
    int lastYear = currentYear - 1;



}





<style>

    .status-approved {
        color: white;
        background-color: green;
        padding: 5px 10px;
        border-radius: 4px;
    }

    .status-rejected {
        color: white;
        background-color: red;
        padding: 5px 10px;
        border-radius: 4px;
    }

    .status-pending {
        color: black;
        background-color: orange;
        padding: 5px 10px;
        border-radius: 4px;
    }

    #reportTable {
        width: 100% !important;
    }

        #reportTable th, #reportTable td {
            white-space: nowrap;
        }

</style>

<div class="text-center mb-4 mt-4">
    <div class="d-flex align-items-center justify-content-center gap-2">
        <i class="fas fa-file-excel" style="color: #2a5a8a;"></i>
        <h5 class="fw-bold mb-0" style="color: #153355;">
            Organization Cards Reports
        </h5>
    </div>
    <hr style="border-top: 1px solid black; width: 100px; margin: 8px auto;">
</div>

<div class="d-flex justify-content-between align-items-center mb-3">
    <button id="bulkDownloadBtn" class="btn text-white" style="background-color:#153355;">
        <i class="fas fa-download"></i> Bulk Download
    </button>
</div>

<!-- Filter Form -->
<form id="searchForm" asp-action="Search" class="needs-validation mb-5" novalidate>
    <div class="border rounded p-4 mb-4 shadow-sm position-relative" style="border-width: 2px; background-color: #f8f9fa;">
        <div class="position-absolute bg-white px-3" style="top: -12px; left: 15px; z-index: 1; color: #123255;">
            <!-- Optional heading -->
        </div>

        <div class="row g-3">
            <!-- Exam Session Filter -->
            <div class="col-md-3">
                <label for="filterExamCode" class="form-label">Exam Session</label>
                <select class="form-select" id="filterExamCode" >
                    <option value="">-- Select Session --</option>
                    @foreach (var examCod in examCodes)
                    {
                        if (int.TryParse(examCod.EXM_EXAM_YEAR, out int examYear))
                        {
                            if (examCod.ACTIVATED_SESSION == "Activated")
                            {
                                <option value="@examCod.EXM_EXAM_CODE">@examCod.EXM_EXAM_LEVEL @examCod.EXM_EXAM_SESSION @examCod.EXM_EXAM_YEAR</option>
                            }
                        }
                    }
                </select>
      
            </div>

            <!-- Subject Code Filter -->
            <div class="col-md-3">
                <label for="filterSubject" class="form-label">Subject Code</label>
                <select class="form-select" id="filterSubject" >
                    <option value="">-- Select Subject --</option>
                </select>
             
            </div>

            <!-- Paper Code Filter -->
            <div class="col-md-3">
                <label for="filterPaperCode" class="form-label">Paper Code</label>
                <select class="form-select" id="filterPaperCode">
                    <option value="">-- Select Paper Code --</option>
                </select>
             
            </div>

            <!-- Region Code Filter -->
            <div class="col-md-3">
                <div class="form-group" id="filterRegionCodeContainer">
                    <label for="filterRegionCode" class="form-label">Region Code</label>
                    <select id="filterRegionCode" name="regionCode" class="form-select">
                        <option value="">-- Select Region Code --</option>
                        <option value="01">01 - Harare</option>
                        <option value="02">02 - Manicaland</option>
                        <option value="03">03 - Mashonaland East</option>
                        <option value="04">04 - Matabeleland North</option>
                        <option value="05">05 - Midlands</option>
                        <option value="06">06 - Masvingo</option>
                        <option value="07">07 - Mashonaland Central</option>
                        <option value="08">08 - Mashonaland West</option>
                        <option value="09">09 - Matabeleland South</option>
                        <option value="10">10 - Bulawayo</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Buttons -->
        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
            <button id="filterButton" class="btn me-md-2" type="button" style="background-color: #153355;color:white;">
                <i class="fas fa-search me-2"></i>Search
            </button>
            <button id="clearButton" class="btn btn-secondary" type="button">
                <i class="fas fa-undo me-2"></i>Clear
            </button>
        </div>
    </div>
</form>

<!-- Loading Indicator (initially hidden) -->
<div id="loadingIndicator" class="text-center py-5" style="display: none;">
    <i class="fas fa-spinner fa-spin fa-3x"></i>
    <p>Loading data...</p>
</div>

<!-- Report Table (initially hidden) -->
<div id="reportTableContainer" class="card p-4 shadow-sm border-1" style="display: none;">
    <div class="card-body">
        <div class="table-responsive">
            <table id="reportTable" class="table table-bordered table-striped table-hover w-100">
                <thead class="table-light">
                    <tr>
                        <th width="12%">Subject</th>
                        <th width="8%">Paper</th>
                        <th width="10%">Region</th>
                        <th width="10%">Entries</th>
                        <th width="8%">Card</th>
                        <th width="8%">Material</th>
                        <th width="10%">Examiners</th>
                        <th width="15%">Action</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize DataTable (but don't load data yet)
            var table = $('#reportTable').DataTable({
                "processing": true,
                "serverSide": true,
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                "pageLength": 25,
                "dom": '<"row mb-3"<"col-md-6"l><"col-md-6 text-end"f>>' +
                       '<"row"<"col-md-12"tr>>' +
                       '<"row"<"col-md-5"i><"col-md-7"p>>',
                "columns": [
                    { data: 'subject', name: 'Subject' },
                    { data: 'paper', name: 'Paper' },
                       { data: 'region', name: 'Region' },
                     { data: 'entries', name: 'Entries' },
                    {
                        data: 'card',
                        name: 'Card',
                        render: function(data) {
                            return data === "Yes" ?
                                '<i class="fas fa-check-circle text-success"></i>' :
                                '<i class="fas fa-times-circle text-danger"></i>';
                        }
                    },
                    {
                        data: 'materials',
                        name: 'Materials',
                        render: function(data) {
                            return data === "Yes" ?
                                '<i class="fas fa-check-circle text-success"></i>' :
                                '<i class="fas fa-times-circle text-danger"></i>';
                        }
                    },
                    { data: 'examiners', name: 'Examiners' },
                          {
                data: null,
                name: 'Action',
                orderable: false,
                searchable: false,
                render: function(data, type, row) {
                    // Check if the required data exists
                    if (!row.examCode || !row.subject || !row.paper) {
                        return '<button class="btn btn-sm btn-secondary" disabled><i class="fas fa-download"></i> Download</button>';
                    }

                    return '<button class="btn btn-sm btn-primary download-btn" ' +
                           'data-examcode="' + (row.examCode || '') + '" ' +
                           'data-subjectcode="' + (row.subject || '') + '" ' +
                           'data-papercode="' + (row.paper || '') + '" ' +
                           'data-regioncode="' + (row.region || '') + '">' +
                           '<i class="fas fa-download"></i> Download</button>';
                }
            }
                ],
                "ajax": {
                    url: "/ManageTeams/GetDataDownload",
                    type: "POST",
                    contentType: "application/json",
                    data: function(d) {
                        return JSON.stringify({
                            draw: d.draw,
                            start: d.start,
                            length: d.length,
                            examCode: $('#filterExamCode').val(),
                            subject: $('#filterSubject').val(),
                            paperCode: $('#filterPaperCode').val(),
                            regionCode: $('#filterRegionCode').val()
                        });
                    }
                }
            });

            // Filter button click event
            $('#filterButton').on('click', function () {
                // Validate form
                // var form = document.getElementById('searchForm');
                // if (!form.checkValidity()) {
                //     form.classList.add('was-validated');
                //     return;
                // }

                // Show loading and hide table
                $('#loadingIndicator').show();
                $('#reportTableContainer').hide();

                // Initialize or reload DataTable
                if ($.fn.DataTable.isDataTable('#reportTable')) {
                    table.ajax.reload(function(json) {
                        $('#loadingIndicator').hide();
                        $('#reportTableContainer').show();
                    });
                } else {
                    table = $('#reportTable').DataTable({
                        // Configuration as above
                    });
                    $('#loadingIndicator').hide();
                    $('#reportTableContainer').show();
                }
            });

            // Clear button click event
            $('#clearButton').on('click', function () {
                // Reset form
                $('#searchForm')[0].reset();
                $('#searchForm').removeClass('was-validated');

                // Hide table and clear data
                $('#reportTableContainer').hide();
                if ($.fn.DataTable.isDataTable('#reportTable')) {
                    table.clear().draw();
                }
            });

            // Example of dependent dropdowns
            $('#filterExamCode').change(function() {
                var examCode = $(this).val();
                // Implement your AJAX call to populate subjects based on exam code
            });



            $(document).on('click', '.download-btn', function() {
            var examCode = $(this).data('examcode');
            var subjectCode = $(this).data('subjectcode');
            var paperCode = $(this).data('papercode');
            var regionCode = $(this).data('regioncode');
            var activity = "BEM";

            if (!examCode || !subjectCode || !paperCode) {
                alert('Missing required parameters for download.');
                return;
            }

            downloadOrganizationCard(examCode, subjectCode, paperCode, regionCode, activity);
        });

        // Download function using GET
        function downloadOrganizationCard(examCode, subjectCode, paperCode, regionCode, activity) {
            // Show loading indicator
            var button = $('.download-btn[data-examcode="' + examCode + '"][data-subjectcode="' + subjectCode + '"][data-papercode="' + paperCode + '"]');
            var originalHtml = button.html();
            button.html('<i class="fas fa-spinner fa-spin"></i> Downloading...');
            button.prop('disabled', true);

            // Create the download URL with query parameters
            var params = {
                examCode: examCode,
                subjectCode: subjectCode,
                paperCode: paperCode,
                activity: activity
            };

            // Add regionCode only if it exists
            if (regionCode) {
                params.regionCode = regionCode;
            }

            var url = '/ManageTeams/Download?' + $.param(params);

            console.log('Download URL:', url); // For debugging

            // Method 1: Using fetch API (recommended)
            fetch(url, {
                method: 'GET',
                headers: {
                    'Accept': 'application/pdf'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok: ' + response.status);
                }
                return response.blob();
            })
            .then(blob => {
                // Create a download link and trigger click
                var blobUrl = window.URL.createObjectURL(blob);
                var a = document.createElement('a');
                a.style.display = 'none';
                a.href = blobUrl;
                a.download = 'OrganizationCard_' + subjectCode + '_' + paperCode + '.pdf';
                document.body.appendChild(a);
                a.click();

                // Clean up
                window.URL.revokeObjectURL(blobUrl);
                document.body.removeChild(a);
            })
            .catch(error => {
                console.error('Error downloading file:', error);
                alert('Error downloading file. Please try again. Error: ' + error.message);
            })
            .finally(() => {
                // Re-enable the button and restore original text
                button.html(originalHtml);
                button.prop('disabled', false);
            });

            // Method 2: Alternative using iframe (fallback)
            /*
            var iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            iframe.src = url;

            iframe.onload = function() {
                // Re-enable the button and restore original text after download completes
                setTimeout(function() {
                    button.html(originalHtml);
                    button.prop('disabled', false);
                    document.body.removeChild(iframe);
                }, 2000);
            };

            iframe.onerror = function() {
                button.html(originalHtml);
                button.prop('disabled', false);
                document.body.removeChild(iframe);
                alert('Download failed. Please try again.');
            };

            document.body.appendChild(iframe);
            */
        }

        // Refresh button if needed
        $('#refreshBtn').on('click', function() {
            table.ajax.reload();
        });

        });
    </script>


    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#filterExamCode').change(function () {
                var selectedExamCode = $(this).val();
                var subjectSelect = $('#filterSubject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#filterSubject').change(function () {
                var selectedSubjectId = $(this).val();
                var paperCodeSelect = $('#filterPaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);


                    if (subjectCheck === '7') {
                        $('#filterRegionCodeContainer').show();
                        $('#filterRegionCode').attr('required', 'required');
                    } else {

                        $('#filterRegionCodeContainer').hide();
                        $('#filterRegionCode').removeAttr('required');
                    }
                } else {
                    $('#filterRegionCodeContainer').hide();
                    $('#filterRegionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));

                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>
}

