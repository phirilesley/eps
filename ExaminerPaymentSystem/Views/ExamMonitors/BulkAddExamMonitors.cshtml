@inject SignInManager<ApplicationUser> SignInManager
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Bulk Add Exam Monitors";

    string regionCode = ViewBag.RegionCode ?? "";
}

<style>
        :root {
            --primary: #3f51b5;
            --secondary: #6c757d;
            --success: #4caf50;
            --info: #00bcd4;
            --warning: #ff9800;
            --danger: #f44336;
            --light: #f8f9fa;
            --dark: #212529;
        }

        body {
            background-color: #f5f7fa;
        }

        .text-gradient {
            background: linear-gradient(135deg, var(--primary), #2196F3);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .icon-shape {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 48px;
            height: 48px;
        }

        .card {
            border-radius: 12px;
            overflow: hidden;
            transition: all 0.3s ease;
            border: none;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

        .file-upload-wrapper {
            position: relative;
            margin-bottom: 1rem;
        }

        .file-upload-label {
            display: block;
            cursor: pointer;
            transition: all 0.3s;
        }

        .file-upload-design {
            border: 2px dashed #dee2e6;
            border-radius: 8px;
            padding: 2rem;
            text-align: center;
            transition: all 0.3s;
        }

        .file-upload-label:hover .file-upload-design,
        .file-upload-label.dragover .file-upload-design {
            border-color: var(--primary);
            background-color: rgba(63, 81, 181, 0.05);
        }

        .upload-icon {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 1rem;
        }

        .upload-text span:first-child {
            font-size: 1.1rem;
        }

        .upload-text span:last-child {
            font-size: 0.9rem;
            color: var(--secondary);
        }


        .badge {
            padding: 0.35em 0.65em;
            font-weight: 500;
        }

        .btn-lg {
            padding: 0.75rem 1.5rem;
            font-size: 1.1rem;
            border-radius: 8px;
        }

        .form-select, .form-control {
            border-radius: 8px;
            padding: 0.75rem 1rem;
        }

        .table-borderless tbody tr:nth-child(odd) {
            background-color: rgba(248, 249, 250, 0.5);
        }

    .file-upload-wrapper {
        position: relative;
        margin-bottom: 1rem;
    }

    .file-upload-label {
        display: block;
        cursor: pointer;
        transition: all 0.3s;
    }

    .file-upload-design {
        border: 2px dashed #dee2e6;
        border-radius: 8px;
        padding: 2rem;
        text-align: center;
        transition: all 0.3s;
    }

    .file-upload-label:hover .file-upload-design,
    .file-upload-label.dragover .file-upload-design {
        border-color: #3f51b5;
        background-color: rgba(63, 81, 181, 0.05);
    }

    .upload-icon {
        font-size: 2.5rem;
        color: #3f51b5;
        margin-bottom: 1rem;
    }

    .upload-text span:first-child {
        font-size: 1.1rem;
    }

    .upload-text span:last-child {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .file-info {
        margin-top: 1rem;
        font-size: 0.85rem;
        color: #6c757d;
    }

    #file {
        width: 0.1px;
        height: 0.1px;
        opacity: 0;
        overflow: hidden;
        position: absolute;
        z-index: -1;
    }

    .progress {
        height: 6px;
    }

    .file-upload-label.dragover {
        border-color: #153355;
        background-color: rgba(21, 51, 85, 0.05);
    }

    #uploadBtn:disabled {
        opacity: 0.7;
    }

    .spinner-border {
        vertical-align: text-top;
    }

    .btn-sm .fa-icon {
        font-size: 0.9em;
        line-height: 1;
        vertical-align: middle;
    }

    .display-6 {
        font-size: 1.5rem;
    }
    </style>

<div class="container-fluid px-4 mt-3">
    <!-- Header Section -->
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-center mb-5">
        <div>
            <div class="header-container mb-4">
                <h5 class="display-6 fw-bold text-gradient mb-1">
                    @ViewData["Title"]
                    @if (User.IsInRole("RegionalManager"))
                    {
                        <span class="region-badge">Region: @regionCode</span>
                    }
                </h5>
                <div class="accent-line"></div>
            </div>

        </div>
        <div class="mt-3 mt-md-0">
            <a href="/ExamMonitors/Recruitment" class="btn text-white" style="background-color:#153355;">
                <i class="fas fa-arrow-left me-2"></i>Back to List
            </a>
        </div>
    </div>

    <!-- Alert Messages -->
@if (TempData["Success"] != null)
{
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i> @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>

            @{
                // Check if there's an error report in Session
                var errorReport = HttpContextAccessor.HttpContext.Session.GetString("ErrorReport");
            }
            @if (!string.IsNullOrEmpty(errorReport))
            {
                <div class="mt-2">
                    <a href="@Url.Action("DownloadErrorReport")" class="btn btn-warning btn-sm">
                        <i class="fas fa-download me-1"></i> Download Error Report
                    </a>
                    <span class="ms-2 text-muted">(Contains details about skipped records)</span>
                </div>
            }
        </div>
}

@if (TempData["Error"] != null)
{
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
}

    <!-- Main Content -->
    <div class="row g-4">
        <!-- Download Template Card -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white border-0 pb-0">
                    <div class="d-flex align-items-center">
                        <div class="icon-shape icon-lg bg-light-primary text-primary rounded-3 me-3">
                            <i class="fas fa-file-download fs-4"></i>
                        </div>
                        <div>
                            <h3 class="mb-0">Download Template</h3>
                            <p class="text-muted mb-0">Get started with our pre-formatted file</p>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="mb-4">
                        <p>Ensure successful uploads by using our standardized template with all required fields:</p>
                        <ul class="list-group list-group-flush border-top">
                            <li class="list-group-item d-flex align-items-center border-0 px-0">
                                <i class="fas fa-check-circle text-success me-2"></i>
                                <span>Predefined column structure</span>
                            </li>
                            <li class="list-group-item d-flex align-items-center border-0 px-0">
                                <i class="fas fa-check-circle text-success me-2"></i>
                                <span>Data validation rules included</span>
                            </li>
                            <li class="list-group-item d-flex align-items-center border-0 px-0">
                                <i class="fas fa-check-circle text-success me-2"></i>
                                <span>Example rows for guidance</span>
                            </li>
                        </ul>
                    </div>
                    <div class="d-grid">
                        <a asp-action="DownloadExamMonitorsTemplate" class="btn btn-lg text-white" style="background-color:#153355;">
                            <i class="fas fa-download me-2"></i> Download Excel Template
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Upload Card -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-sm h-100">
                <!-- Card Header remains the same -->
                <div class="card-body">
                    <form asp-action="UploadExamMonitors" method="post" enctype="multipart/form-data" id="uploadForm">
                        <!-- File Upload -->
                        <div class="mb-4">
                            <label for="file" class="form-label fw-semibold">Select Excel File</label>
                            <div class="file-upload-wrapper">
                                <input type="file" class="form-control" id="file" name="file" accept=".xlsx, .xls" required>
                                <label for="file" class="file-upload-label">
                                    <div class="file-upload-design">
                                        <div class="upload-icon">
                                            <i class="fas fa-cloud-upload-alt"></i>
                                        </div>
                                        <div class="upload-text">
                                            <span class="d-block fw-bold">Choose a file</span>
                                            <span>or drag and drop here</span>
                                        </div>
                                        <div class="file-info" id="fileInfo">XLSX or XLS (Max 10MB)</div>
                                    </div>
                                </label>
                            </div>
                            <div class="progress mt-2 d-none" id="uploadProgress">
                                <div class="progress-bar progress-bar-striped progress-bar-animated"
                                     role="progressbar" style="width: 0%"></div>
                            </div>
                        </div>

                        <!-- Region Code -->
                        <div class="mb-4">
                            <label for="regionCode" class="form-label fw-semibold">Region Code <span class="text-muted">(Required)</span></label>
                            <select class="form-select" id="regionCode" name="regionCode" required>
                             
                                    <option value="">Select region (required)</option>
                                    <option value="01">01 - Harare</option>
                                    <option value="02">02 - Manicaland</option>
                                    <option value="03">03 - Mashonaland East</option>
                                    <option value="04">04 - Matabeleland North</option>
                                    <option value="05">05 - Midlands</option>
                                    <option value="06">06 - Masvingo</option>
                                    <option value="07">07 - Mashonaland Central</option>
                                    <option value="08">08 - Mashonaland West</option>
                                    <option value="09">09 - Matabeleland South</option>
                                    <option value="10">10 - Bulawayo</option>
                                </select>
                         
                        </div>

                        <!-- Submit Button -->
                        <div class="d-grid">
                            <button type="submit" class="btn btn-lg text-white" id="uploadBtn" style="background-color:#153355;">
                                <span id="uploadText"><i class="fas fa-cloud-upload-alt me-2"></i> Upload & Process</span>
                                <span id="uploadSpinner" class="spinner-border spinner-border-sm d-none" role="status"></span>
                            </button>
                        </div>
                    </form>
                    <div id="uploadStatus" class="mt-3 text-center d-none"></div>
                </div>
            </div>
        </div>

    <!-- Instructions Card -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white border-0">
                    <div class="d-flex align-items-center">
                        <div class="icon-shape icon-lg bg-light-info text-info rounded-3 me-3">
                            <i class="fas fa-question-circle fs-4"></i>
                        </div>
                        <div>
                            <h3 class="mb-0">Upload Guidelines</h3>
                            <p class="text-muted mb-0">Important information for successful uploads</p>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <!-- Required Fields -->
                        <div class="col-md-6 mb-4 mb-md-0">
                            <div class="border-end-md pe-md-4">
                                <h5 class="d-flex align-items-center text-info mb-3">
                                    <i class="fas fa-list-check me-2"></i> Required Fields
                                </h5>
                                <div class="table-responsive">
                                    <table class="table table-borderless">
                                        <thead class="bg-light">
                                            <tr>
                                                <th>Field</th>
                                                <th>Format</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td><span class="badge bg-primary bg-opacity-10 text-primary">NATIONAL_ID</span></td>
                                                <td>Unique identification number</td>
                                            </tr>
                                            <tr>
                                                <td><span class="badge bg-primary bg-opacity-10 text-primary">LASTNAME</span></td>
                                                <td>Text (max 50 chars)</td>
                                            </tr>
                                            <tr>
                                                <td><span class="badge bg-primary bg-opacity-10 text-primary">FIRSTNAME</span></td>
                                                <td>Text (max 50 chars)</td>
                                            </tr>
                                            <tr>
                                                <td><span class="badge bg-primary bg-opacity-10 text-primary">GENDER</span></td>
                                                <td>Male/Female</td>
                                            </tr>
                                            <tr>
                                                <td><span class="badge bg-primary bg-opacity-10 text-primary">STATUS</span></td>
                                                <td>Current invitation status</td>
                                            </tr>
                                            <tr>
                                                <td><span class="badge bg-primary bg-opacity-10 text-primary">CENTRE</span></td>
                                                <td>Current centre</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <!-- Best Practices -->
                        <div class="col-md-6">
                            <h5 class="d-flex align-items-center text-info mb-3">
                                <i class="fas fa-lightbulb me-2"></i> Best Practices
                            </h5>
                            <div class="d-flex mb-3">
                                <div class="me-3">
                                    <div class="icon-shape icon-sm bg-light-warning text-warning rounded-circle">
                                        <i class="fas fa-exclamation"></i>
                                    </div>
                                </div>
                                <div>
                                    <h6 class="mb-1">File Preparation</h6>
                                    <p class="small text-muted mb-0">Don't modify column headers and ensure all required fields are populated.</p>
                                </div>
                            </div>
                            <div class="d-flex mb-3">
                                <div class="me-3">
                                    <div class="icon-shape icon-sm bg-light-warning text-warning rounded-circle">
                                        <i class="fas fa-clone"></i>
                                    </div>
                                </div>
                                <div>
                                    <h6 class="mb-1">Duplicate Check</h6>
                                    <p class="small text-muted mb-0">Verify no duplicate NATIONAL_ID values exist before uploading.</p>
                                </div>
                            </div>
                            <div class="d-flex mb-3">
                                <div class="me-3">
                                    <div class="icon-shape icon-sm bg-light-warning text-warning rounded-circle">
                                        <i class="fas fa-save"></i>
                                    </div>
                                </div>
                                <div>
                                    <h6 class="mb-1">File Format</h6>
                                    <p class="small text-muted mb-0">Save as .xlsx format for best compatibility and performance.</p>
                                </div>
                            </div>
                            <div class="d-flex">
                                <div class="me-3">
                                    <div class="icon-shape icon-sm bg-light-warning text-warning rounded-circle">
                                        <i class="fas fa-database"></i>
                                    </div>
                                </div>
                                <div>
                                    <h6 class="mb-1">Large Files</h6>
                                    <p class="small text-muted mb-0">For files >1000 rows, consider splitting into batches.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const fileInput = document.getElementById('file');
                const fileInfo = document.getElementById('fileInfo');
                const uploadForm = document.getElementById('uploadForm');
                const uploadBtn = document.getElementById('uploadBtn');
                const uploadText = document.getElementById('uploadText');
                const uploadSpinner = document.getElementById('uploadSpinner');
                const uploadStatus = document.getElementById('uploadStatus');
                const uploadProgress = document.getElementById('uploadProgress');
                const progressBar = uploadProgress.querySelector('.progress-bar');

                // File input change handler (same as before)
                fileInput.addEventListener('change', function(e) {
                    if (this.files && this.files.length > 0) {
                        const file = this.files[0];
                        const fileSize = (file.size / (1024 * 1024)).toFixed(2);
                        fileInfo.innerHTML = `<i class="fas fa-file-excel text-success me-2"></i>${file.name} (${fileSize} MB)`;

                        if (!file.name.match(/\.(xlsx|xls)$/i)) {
                            showError('Please select an Excel file (.xlsx or .xls)');
                            resetFileInput();
                            return;
                        }

                        if (file.size > 10 * 1024 * 1024) {
                            showError('File size exceeds 10MB limit');
                            resetFileInput();
                            return;
                        }
                    }
                });

                // Form submission handler
                uploadForm.addEventListener('submit', function(e) {
                    // Show loading state
                    uploadBtn.disabled = true;
                    uploadText.textContent = 'Processing...';
                    uploadSpinner.classList.remove('d-none');
                    uploadProgress.classList.remove('d-none');

                    // Simulate progress (remove this in production)
                    let progress = 0;
                    const progressInterval = setInterval(() => {
                        progress += 5;
                        progressBar.style.width = `${progress}%`;
                        if (progress >= 100) clearInterval(progressInterval);
                    }, 200);

                    // AJAX submission
                    const formData = new FormData(uploadForm);

                    fetch(uploadForm.action, {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        clearInterval(progressInterval);
                        progressBar.style.width = '100%';

                        if (data.success) {
                            showSuccess(data.message || 'Upload completed successfully!');
                            uploadForm.reset();
                            fileInfo.textContent = 'XLSX or XLS (Max 10MB)';
                        } else {
                            showError(data.message || 'Error processing file');
                        }
                    })
                    .catch(error => {
                        clearInterval(progressInterval);
                        showError('An error occurred during upload');
                        console.error('Upload error:', error);
                    })
                    .finally(() => {
                        resetUploadState();
                    });

                    // For non-AJAX forms, you would just show the spinner:
                    // uploadBtn.disabled = true;
                    // uploadText.textContent = 'Uploading...';
                    // uploadSpinner.classList.remove('d-none');
                });

                // Helper functions
                function resetUploadState() {
                    setTimeout(() => {
                        uploadBtn.disabled = false;
                        uploadText.innerHTML = '<i class="fas fa-cloud-upload-alt me-2"></i> Upload & Process';
                        uploadSpinner.classList.add('d-none');
                        uploadProgress.classList.add('d-none');
                        progressBar.style.width = '0%';
                    }, 2000);
                }

                function showError(message) {
                    uploadStatus.innerHTML = `<div class="alert alert-danger">${message}</div>`;
                    uploadStatus.classList.remove('d-none');
                    setTimeout(() => uploadStatus.classList.add('d-none'), 5000);
                }

                function showSuccess(message) {
                    uploadStatus.innerHTML = `<div class="alert alert-success">${message}</div>`;
                    uploadStatus.classList.remove('d-none');
                    setTimeout(() => uploadStatus.classList.add('d-none'), 5000);
                }

                function resetFileInput() {
                    fileInput.value = '';
                    fileInfo.textContent = 'XLSX or XLS (Max 10MB)';
                }

                // Drag and drop handlers (same as before)
                const uploadLabel = document.querySelector('.file-upload-label');
                uploadLabel.addEventListener('dragover', function(e) {
                    e.preventDefault();
                    this.classList.add('dragover');
                });
                uploadLabel.addEventListener('dragleave', function(e) {
                    e.preventDefault();
                    this.classList.remove('dragover');
                });
                uploadLabel.addEventListener('drop', function(e) {
                    e.preventDefault();
                    this.classList.remove('dragover');
                    if (e.dataTransfer.files.length) {
                        fileInput.files = e.dataTransfer.files;
                        fileInput.dispatchEvent(new Event('change'));
                    }
                });
            });
        </script>

    
}