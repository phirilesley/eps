@inject SignInManager<ApplicationUser> SignInManager
@{
    ViewData["Title"] = "Shortlisted Exam Monitors";

    string regionCode = ViewBag.RegionCode ?? "";
}
<link href="/css/monitorlist.css" rel="stylesheet" />
<style>
    .badge.bg-pink {
        background-color: #ff69b4;
        color: white;
    }

    .btn-sm .fa-icon {
        font-size: 0.9em;
        line-height: 1;
        vertical-align: middle;
    }

    .display-6 {
        font-size: 1.5rem;
    }

    :root {
        --primary-color: #153355;
        --secondary-color: #4a8c5f;
        --accent-color: #e63946;
        --light-bg: #f8f9fa;
        --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.08);
    }

    body {
        background-color: #f5f7f9;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  
    }

    .header-container {
        position: relative;
        padding-bottom: 10px;
    }

    .accent-line {
        height: 4px;
        width: 80px;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        border-radius: 2px;
        margin-top: 8px;
    }

    .text-gradient {
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .region-badge {
        font-size: 0.6em;
    
        color: white;
        padding: 4px 10px;
        border-radius: 20px;
        vertical-align: middle;
    }

    .card {
        border-radius: 10px;
        box-shadow: var(--card-shadow);
        transition: transform 0.2s;
        margin-bottom: 20px;
    }

        .card:hover {
            transform: translateY(-3px);
        }

    .filter-card {
        background-color: white;
    }

    .action-card {
        background: linear-gradient(135deg, #153355 0%, #1e4a6e 100%);
        color: white;
    }

    .btn-primary-custom {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        color: white;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s;
    }

        .btn-primary-custom:hover {
            background-color: #0f2642;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

    .btn-outline-custom {
        border: 2px solid var(--primary-color);
        color: var(--primary-color);
        font-weight: 600;
        border-radius: 8px;
        transition: all 0.3s;
    }

        .btn-outline-custom:hover {
            background-color: var(--primary-color);
            color: white;
        }

    .filter-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 5px;
    }

    .form-select {
        border-radius: 6px;
        padding: 10px;
        border: 1px solid #ced4da;
    }

    .action-icon {
        font-size: 2rem;
        margin-bottom: 15px;
        color: rgba(255, 255, 255, 0.9);
    }

    .section-title {
        position: relative;
        padding-bottom: 10px;
        margin-bottom: 20px;
        font-weight: 600;
        color: var(--primary-color);
    }

        .section-title:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            height: 3px;
            width: 40px;
            background-color: var(--secondary-color);
            border-radius: 3px;
        }

    .code-container {
        background-color: #1e1e1e;
        color: #d4d4d4;
        padding: 20px;
        border-radius: 8px;
        font-family: 'Fira Code', monospace;
        overflow-x: auto;
        margin-top: 30px;
    }

    .code-comment {
        color: #6a9955;
    }

    .code-keyword {
        color: #569cd6;
    }

    .code-function {
        color: #dcdcaa;
    }

    .code-string {
        color: #ce9178;
    }

    .code-var {
        color: #9cdcfe;
    }

    /* Make Select2 match Bootstrap form control height */
    .select2-container .select2-selection--single {
        height: 38px !important;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.5;
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
    }

    .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: 36px !important;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 24px !important;
    }

    /* Add to your CSS file */
    .assignment-badge {
        font-size: 0.7rem;
        padding: 0.25rem 0.4rem;
        margin: 0.1rem;
        border: 1px solid #dee2e6;
    }

    .assignment-result-popup {
        max-height: 80vh;
        overflow-y: auto;
    }

    /* Scrollable modal body if needed */
    .swal2-popup .swal2-html-container {
        max-height: 60vh;
        overflow-y: auto;
    }
</style>


<div class="container-fluid px-4 mt-3">
    <!-- Header Section -->
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-center mb-2">
        <div>
            <div class="header-container mb-4">
                <h5 class="display-6 fw-bold text-gradient mb-1">
                    @ViewData["Title"]
                    @if (User.IsInRole("RegionalManager"))
                    {
                        <span class="region-badge text-white">Region: @regionCode</span>
                    }
                </h5>
                <div class="accent-line"></div>

              
            </div>
        </div>

    </div>

    <style>
        .btn-custom {
            background-color: #153355;
            color: white;
            border: 1px solid #153355;
        }

            .btn-custom:hover {
                background-color: #0f2642;
                border-color: #0f2642;
                color: white;
            }

        .btn-outline-custom {
            color: #153355;
            border-color: #153355;
            background-color: transparent;
        }

            .btn-outline-custom:hover {
                color: white;
                background-color: #153355;
                border-color: #153355;
            }
    </style>
                                                                                                                            
    <div class="card border-0 shadow-sm mb-2 p-2">
        <div class="card-body">
            <div class="row g-3">

                @if (User.IsInRole("Admin") || User.IsInRole("HR"))
                {
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="regionFilter" class="form-label mb-1">Region</label>
                            <select id="regionFilter" class="form-select" required>
                                <option value="">All Regions</option>
                                <option value="01">01 - Harare</option>
                                <option value="02">02 - Manicaland</option>
                                <option value="03">03 - Mashonaland East</option>
                                <option value="04">04 - Matabeleland North</option>
                                <option value="05">05 - Midlands</option>
                                <option value="06">06 - Masvingo</option>
                                <option value="07">07 - Mashonaland Central</option>
                                <option value="08">08 - Mashonaland West</option>
                                <option value="09">09 - Matabeleland South</option>
                                <option value="10">10 - Bulawayo</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="districtFilter" class="form-label mb-1">District</label>
                            <select id="districtFilter" class="form-select" required>
                                <option value="">All Districts</option>
                            </select>
                        </div>
                    </div>
                }


                     @if (User.IsInRole("RegionalManager"))
                {
                <div class="col-md-3">
                    <label for="districtFilter" class="form-label">District</label>
                    <select id="districtFilter" class="form-select select2">
                        <option value="">All Districts</option>
                        @if (ViewBag.Districts != null)
                        {
                            @foreach (var district in ViewBag.Districts)
                            {
                                <option value="@district.Value">@district.Text</option>
                            }
                        }
                        else
                        {
                            <option value="" disabled>No venues available</option>
                        }
                    </select>
                </div>

                    <div class="col-md-3">
                        <label for="centreFilter" class="form-label">Centre Number</label>
                        <select class="form-select select2" id="centreFilter">
                            <option value="">All Centres</option>
                            @if (ViewBag.Centres != null)
                            {
                                @foreach (var centre in ViewBag.Centres)
                                {
                                    <option value="@centre.Value">@centre.Text (@centre.Value)</option>
                                }
                            }
                            else
                            {
                                <option value="" disabled>No venues available</option>
                            }
                        </select>
                    </div>
                }
               

                <!-- Status Filter -->
                <div class="col-md-3">
                    <label for="statusFilter" class="form-label">Status</label>
                    <select id="statusFilter" class="form-select select2">
                        <option value="">All Statuses</option>
                        <option value="Resident Monitor">Resident Monitor</option>
                        <option value="Assistant Cluster Manager">Assistant Cluster Manager</option>
                        <option value="Cluster Manager">Cluster Manager</option>
                    </select>
                </div>

                <!-- Gender Filter -->
                <div class="col-md-3">
                    <label for="genderFilter" class="form-label">Gender</label>
                    <select id="genderFilter" class="form-select select2">
                        <option value="">All Genders</option>
                        <option value="M">Male</option>
                        <option value="F">Female</option>
                    </select>
                </div>

                <!-- Reset Button -->
                <div class="col-md-2 d-flex align-items-end">
                    <button id="resetFiltersBtn" class="btn btn-outline-custom">
                        <i class="fas fa-undo me-2"></i>Reset Filters
                    </button>
                </div>
            </div>
        </div>
    </div>



    <script>
        $(document).ready(function() {
            // Initialize all Select2 elements
            $('.select2').select2({
                width: '100%',
                placeholder: function() {
                    return $(this).data('placeholder') || "Select an option";
                },
                allowClear: true
            });
        });
    </script>

    <div class="col-md-4 d-flex align-items-end gap-2 mt-3 mb--3">
        <button id="selectAllBtn" class="btn btn-outline-primary">
            <i class="fas fa-check-square me-2"></i>Select All Filtered
        </button>
        <button id="deselectAllBtn" class="btn btn-outline-secondary">
            <i class="fas fa-times-circle me-2"></i>Deselect All
        </button>
        <button id="assignSelectedBtn" class="btn text-white" style="background-color:#153355;" disabled>
            <i class="fas fa-paper-plane me-2"></i>Assign Selected
        </button>
    </div>

    <!-- Data Table Card -->
    <div class="card border-0 shadow-sm p-2">
        <!-- Table Container with Forced Visibility -->
        <div id="monitorDataContainer" style="display: block; visibility: visible; opacity: 1;">
            <!-- Basic Table Structure -->
            <table id="monitorsTable" class="table table-striped" style="width:100%; visibility: visible !important;">
                <thead style="display: table-header-group !important;">
                    <tr>
                       <th></th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>National ID</th>
                        <th>Gender</th>
                        <th>Status</th>
                        <th>Region</th>
                        <th>Assignments</th> <!-- New column -->
                        <th>Station</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody style="display: table-row-group !important;">
                    <!-- Data will be inserted here -->
                </tbody>
            </table>
        </div>

</div>




    <!-- Modal -->
   

    <!-- Edit Monitor Modal -->
    <div class="modal fade" id="editMonitorModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header text-white" style="background-color:#153355;">
                    <h5 class="modal-title">Edit Monitor</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editMonitorForm">
                        <input type="hidden" id="editNationalId">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="editFirstName" class="form-label">First Name</label>
                                <input type="text" class="form-control" id="editFirstName" required>
                            </div>
                            <div class="col-md-6">
                                <label for="editLastName" class="form-label">Last Name</label>
                                <input type="text" class="form-control" id="editLastName" required>
                            </div>
                            <div class="col-md-6">
                                <label for="editGender" class="form-label">Gender</label>
                                <select class="form-select" id="editGender" required>
                                    <option value="M">Male</option>
                                    <option value="F">Female</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="editStatus" class="form-label">Status</label>
                                <select class="form-select" id="editStatus" required>
                                    <option value="Resident Monitor">Resident Monitor</option>
                                    <option value="Assistant Cluster Manager">Assistant Cluster Manager</option>
                                    <option value="Cluster Manager">Cluster Manager</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="editRegion" class="form-label">Region</label>
                                <select class="form-select" id="editRegion" required>
                                    <option value="01">01 - Harare</option>
                                    <option value="02">02 - Manicaland</option>
                                    <option value="03">03 - Mashonaland East</option>
                                    <option value="04">04 - Matabeleland North</option>
                                    <option value="05">05 - Midlands</option>
                                    <option value="06">06 - Masvingo</option>
                                    <option value="07">07 - Mashonaland Central</option>
                                    <option value="08">08 - Mashonaland West</option>
                                    <option value="09">09 - Matabeleland South</option>
                                    <option value="10">10 - Bulawayo</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="editPhone" class="form-label">Phone</label>
                                <input type="text" class="form-control" id="editPhone" required>
                            </div>
                            <div class="col-md-6">
                                <label for="editCentre" class="form-label">Centre</label>
                                <input type="text" class="form-control" id="editCentre" required>
                            </div>
                            <div class="col-md-6">
                                <label for="editStation" class="form-label">Station</label>
                                <input type="text" class="form-control" id="editStation">
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" id="saveEditBtn" class="btn text-white" style="background-color:#153355;">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Monitor Modal -->
    <div class="modal fade" id="addMonitorModal" tabindex="-1" aria-labelledby="addMonitorModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <!-- Changed to modal-xl for extra large -->
            <div class="modal-content">
                <div class="modal-header text-white" style="background-color:#153355;">
                    <h5 class="modal-title" id="addMonitorModalLabel">
                        <i class="fas fa-user-plus me-2"></i>Add New Monitor
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addMonitorForm">
                        <div class="row">
                            <!-- Column 1 - Personal Info -->
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label for="nationalId" class="form-label">National ID*</label>
                                    <input type="text" class="form-control form-control-lg" id="nationalId" name="nationalId" required>
                                </div>
                                <div class="mb-3">
                                    <label for="firstName" class="form-label">First Name*</label>
                                    <input type="text" class="form-control form-control-lg" id="firstName" name="firstName" required>
                                </div>
                                <div class="mb-3">
                                    <label for="lastName" class="form-label">Last Name*</label>
                                    <input type="text" class="form-control form-control-lg" id="lastName" name="lastName" required>
                                </div>
                                <div class="mb-3">
                                    <label for="gender" class="form-label">Gender*</label>
                                    <select class="form-select form-select-lg" id="gender" name="sex" required>
                                        <option value="">Select Gender</option>
                                        <option value="M">Male</option>
                                        <option value="F">Female</option>
                                    </select>
                                </div>
                            </div>

                            <!-- Column 2 - Regional Info -->
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label for="region" class="form-label">Region*</label>
                                    <select class="form-select form-select-lg" id="region" name="region" required>
                                        <option value="">Select Region</option>
                                        <option value="01">01 - Harare</option>
                                        <option value="02">02 - Manicaland</option>
                                        <option value="03">03 - Mashonaland East</option>
                                        <option value="04">04 - Matabeleland North</option>
                                        <option value="05">05 - Midlands</option>
                                        <option value="06">06 - Masvingo</option>
                                        <option value="07">07 - Mashonaland Central</option>
                                        <option value="08">08 - Mashonaland West</option>
                                        <option value="09">09 - Matabeleland South</option>
                                        <option value="10">10 - Bulawayo</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="district" class="form-label">District</label>
                                    <input type="text" class="form-control form-control-lg" id="district" name="district">
                                </div>
                                <div class="mb-3">
                                    <label for="station" class="form-label">Station</label>
                                    <input type="text" class="form-control form-control-lg" id="station" name="station">
                                </div>
                                <div class="mb-3">
                                    <label for="centre" class="form-label">Centre Number*</label>
                                    <input type="text" class="form-control form-control-lg" id="centre" name="centre" required>
                                </div>
                            </div>

                            <!-- Column 3 - Professional Info -->
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone Number</label>
                                    <input type="tel" class="form-control form-control-lg" id="phone" name="phone">
                                </div>
                                <div class="mb-3">
                                    <label for="age" class="form-label">Age*</label>
                                    <input type="text" class="form-control form-control-lg" id="age" name="age" required>
                                </div>
                                <div class="mb-3">
                                    <label for="status" class="form-label">Status</label>
                                    <select class="form-select form-select-lg" id="status" name="status">
                                        <option value="">Select Status</option>
                                        <option value="Resident Monitor">Resident Monitor</option>
                                        <option value="Assistant Cluster Manager">Assistant Cluster Manager</option>
                                        <option value="Cluster Manager">Cluster Manager</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="qualification" class="form-label">Professional Qualification</label>
                                    <input type="text" class="form-control form-control-lg" id="qualification" name="qualification">
                                </div>
                                <div class="mb-3">
                                    <label for="experience" class="form-label">Teaching Experience</label>
                                    <input type="text" class="form-control form-control-lg" id="experience" name="experience">
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-lg" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                    <button type="button" id="saveMonitorBtn" class="btn text-white btn-lg" style="background-color:#153355;">
                        <i class="fas fa-save me-2"></i>Save Monitor
                    </button>
                </div>
            </div>
        </div>
    </div>

    </div>


<!-- Simplified modal without notifications -->
<div class="modal fade" id="selectionModal" tabindex="-1" aria-labelledby="selectionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header  text-white" style="background-color:#153355;">
                <h5 class="modal-title" id="selectionModalLabel">
                    <i class="fas fa-paper-plane me-2"></i>Assign Monitors
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- FIXED: Remove Razor syntax, use plain text -->
                <p class="text-muted" id="selectedCount">Assigning monitors to session/phase</p>

                <div class="mb-3">
                    <label for="modalSession" class="form-label">Session *</label>
                    <select id="modalSession" class="form-select" required>
                        <option value="">Select Session</option>
                        @if (ViewBag.Sessions != null)
                        {
                            @foreach (var session in ViewBag.Sessions)
                            {
                                <option value="@session.Value">@session.Text</option>
                            }
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="modalPhase" class="form-label">Phase *</label>
                    <select id="modalPhase" class="form-select" required>
                        <option value="">Select Phase</option>
                        @if (ViewBag.Phases != null)
                        {
                            @foreach (var phase in ViewBag.Phases)
                            {
                                <option value="@phase.Value">@phase.Text</option>
                            }
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="hrStatus" class="form-label">HR Status</label>
                    <select id="hrStatus" class="form-select" required>
                        <option value="Selected" selected>Selected</option>
                  
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn" style="background-color:#153355;"  id="confirmAssignment">Assign Monitors</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {


    <script>
              $(document).ready(function() {
        console.log("Starting data load...");

        // Initialize Select2 first
        $('#centreFilter').select2({
            placeholder: "Select a centre",
            allowClear: true,
            width: '100%'
        });

        // Initialize table variable only once
        var table = initializeDataTable();
        var currentFilters = {
            regionFilter: '',
            statusFilter: '',
            genderFilter: '',
            centreFilter: '',
            districtFilter: '',
            sessionFilter: '',
            phaseFilter: ''
        };

        // Store selected monitor IDs and all filtered monitor IDs
        var selectedMonitors = [];
        var allFilteredMonitorIds = [];

        // Load data initially
        loadAndRenderTable();

        function initializeDataTable() {
            return $('#monitorsTable').DataTable({
                paging: true,
                searching: true,
                ordering: true,
                info: true,
                responsive: true,
                serverSide: false,
                ajax: null,
                language: {
                    emptyTable: "No records found"
                },
                columnDefs: [
                    {
                        targets: 0,
                        orderable: false,
                        className: 'select-checkbox',
                        render: function(data, type, row) {
                            return '<input type="checkbox" class="monitor-checkbox">';
                        }
                    },
                     {
                targets: 7, // Assignments column
                orderable: false,
                width: '200px'
            }
                ],
                order: [[1, 'asc']]
            });
        }

        function loadAndRenderTable() {
            console.log("Loading monitor data with filters:", currentFilters);
            currentFilters.centreFilter = $('#centreFilter').val();

            $.ajax({
                url: '/ExamMonitors/GetExamMonitors',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(currentFilters),
                success: function(response) {
                    console.log("Data received:", response);
                    var data = response.data || response;

                    if (!Array.isArray(data)) {
                        console.error("Data is not an array:", data);
                        showRawData();
                        return;
                    }

                    table.clear().draw();

                    if (data.length === 0) {
                        table.draw();
                        allFilteredMonitorIds = [];
                        updateSelectionInfo();
                        return;
                    }

                    // Store all filtered monitor IDs
                    allFilteredMonitorIds = data.map(item => item.nationalId);

                    data.forEach(function(item) {
                        var isChecked = selectedMonitors.includes(item.nationalId);

                        var assignmentsHtml = '-';
                if (item.assignments && item.assignments.length > 0) {
                    assignmentsHtml = item.assignments.map(assignment =>
                        `<span class="badge bg-light text-dark border me-1 mb-1" style="font-size: 0.7rem;"
                              title="${assignment.status} - ${assignment.phase}/${assignment.session}">
                            ${assignment.phase}/${assignment.session}
                         </span>`
                    ).join('');
                }

                        table.row.add([
                            isChecked ? '<input type="checkbox" class="monitor-checkbox" checked>' : '<input type="checkbox" class="monitor-checkbox">',
                            item.firstName || '-',
                            item.lastName || '-',
                            item.nationalId || '-',
                            item.sex ? `<span class="badge ${item.sex === 'M' ? 'bg-primary' : 'bg-pink'}">${item.sex === 'M' ? 'Male' : 'Female'}</span>` : '-',
                            item.status || '-',
                            item.region || '-',
                            assignmentsHtml,

                            item.station || '-',
                            `
                            <div class="d-flex flex-nowrap gap-2">
                                <a href="/ExamMonitors/Details/${item.nationalId}" class="btn btn-info btn-sm text-white px-3 py-1 d-flex align-items-center">
                                    <i class="fas fa-info-circle me-2"></i>
                                    <span>View</span>
                                </a>
                                <button class="btn btn-sm text-white edit-btn px-3 py-1 d-flex align-items-center"
                                        style="background-color:#153355;" data-id="${item.nationalId || ''}">
                                    <i class="fas fa-edit me-2"></i>
                                    <span>Edit</span>
                                </button>

                       
                            
                            </div>
                            `
                        ]);
                    });

                    table.draw();
                    updateSelectionInfo();
                    $('#monitorDataContainer').show();
                    $('#monitorsTable').show().css('visibility', 'visible');
                },
                error: function(xhr) {
                    console.error("Failed to load data:", xhr.responseText);
                    showRawData();
                }
            });
        }

        // Handle individual checkbox selection
        $('#monitorsTable tbody').on('change', '.monitor-checkbox', function() {
            var tr = $(this).closest('tr');
            var row = table.row(tr);
            var nationalId = row.data()[3]; // Assuming nationalId is in the 4th column

            if ($(this).is(':checked')) {
                if (!selectedMonitors.includes(nationalId)) {
                    selectedMonitors.push(nationalId);
                }
            } else {
                selectedMonitors = selectedMonitors.filter(id => id !== nationalId);
            }

            updateSelectionInfo();
        });

        // Select all filtered monitors
        $('#selectAllBtn').on('click', function() {
            if (allFilteredMonitorIds.length === 0) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No Monitors',
                    text: 'There are no monitors to select.',
                    confirmButtonColor: '#3085d6',
                });
                return;
            }

            // Add all filtered monitors to selection
            selectedMonitors = [...new Set([...selectedMonitors, ...allFilteredMonitorIds])];

            // Check all checkboxes
            $('.monitor-checkbox').prop('checked', true);

            updateSelectionInfo();

            Swal.fire({
                icon: 'success',
                title: 'Selected All',
                text: `Selected all ${allFilteredMonitorIds.length} filtered monitors.`,
                timer: 1500,
                showConfirmButton: false
            });
        });

        // Deselect all monitors
        $('#deselectAllBtn').on('click', function() {
            selectedMonitors = [];
            $('.monitor-checkbox').prop('checked', false);
            updateSelectionInfo();

            Swal.fire({
                icon: 'info',
                title: 'Deselected All',
                text: 'All monitors have been deselected.',
                timer: 1500,
                showConfirmButton: false
            });
        });

        // Update selection information and button states
        function updateSelectionInfo() {
            $('#assignSelectedBtn').prop('disabled', selectedMonitors.length === 0);

            // Update button text to show count
            if (selectedMonitors.length > 0) {
                $('#assignSelectedBtn').html(`<i class="fas fa-paper-plane me-2"></i>Assign Selected (${selectedMonitors.length})`);
            } else {
                $('#assignSelectedBtn').html(`<i class="fas fa-paper-plane me-2"></i>Assign Selected`);
            }

            // Update selection info text if you have it
            if ($('#selectionInfo').length) {
                $('#selectionInfo').text(`${selectedMonitors.length} monitor(s) selected`);
            }
        }

        // Open assignment modal
        $('#assignSelectedBtn').on('click', function() {
            if (selectedMonitors.length === 0) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No Monitors Selected',
                    text: 'Please select at least one monitor to assign.',
                    confirmButtonColor: '#3085d6',
                });
                return;
            }

            $('#selectionModal').modal('show');
        });

        // NEW: Update modal text when shown
        $('#selectionModal').on('show.bs.modal', function() {
            $('#selectedCount').text(`Assigning ${selectedMonitors.length} monitors to session/phase`);
        });

        // Handle confirm assignment button
                     // Handle confirm assignment button
        $('#confirmAssignment').on('click', function() {
            var session = $('#modalSession').val();
            var phase = $('#modalPhase').val();

            if (!session || !phase) {
                Swal.fire({
                    icon: 'error',
                    title: 'Missing Information',
                    text: 'Please select both session and phase.',
                    confirmButtonColor: '#3085d6',
                    position: 'top-end', // Position at top right
                    toast: true,
                    timer: 3000,
                    showConfirmButton: false
                });
                return;
            }

            // Show loading with better positioning
            Swal.fire({
                title: 'Assigning Monitors...',
                text: `Assigning ${selectedMonitors.length} monitors to ${session}/${phase}`,
                allowOutsideClick: false,
                position: 'top-end',
                toast: true,
                timer: 5000,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            // Submit the assignment
            $.ajax({
                url: '/ExamMonitors/AssignMonitorsToTransaction',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    monitorIds: selectedMonitors,
                    session: session,
                    phase: phase,
                    hrStatus: $('#hrStatus').val() || 'Selected'
                }),
                success: function(response) {
                    Swal.close(); // Close loading dialog

                    if (response.success) {
                        let htmlContent = `<p>${response.message}</p>`;

                        if (response.duplicateCount > 0) {
                            htmlContent += `<div class="mt-2">
                                <strong>Already assigned (${response.duplicateCount}):</strong>
                                <div class="small text-muted">These monitors were already assigned</div>
                            </div>`;
                        }

                        if (response.assignedCount > 0) {
                            htmlContent += `<div class="mt-2">
                                <strong>Newly assigned (${response.assignedCount}):</strong>
                                <div class="small text-muted">These monitors were successfully assigned</div>
                            </div>`;
                        }

                        // Use a modal instead of toast for better visibility with many items
                        Swal.fire({
                            icon: 'success',
                            title: 'Assignment Complete',
                            html: htmlContent,
                            width: '500px',
                            confirmButtonColor: '#3085d6',
                            position: 'center', // Center position for better visibility
                            customClass: {
                                popup: 'assignment-result-popup'
                            }
                        }).then(() => {
                            $('#selectionModal').modal('hide');

                            // Clear selection
                            selectedMonitors = [];
                            $('.monitor-checkbox').prop('checked', false);
                            updateSelectionInfo();

                            // Reload table to reflect changes
                            loadAndRenderTable();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message,
                            confirmButtonColor: '#3085d6',
                            position: 'top-end',
                            toast: true,
                            timer: 5000,
                            showConfirmButton: false
                        });
                    }
                },
                error: function(xhr) {
                    Swal.close(); // Close loading dialog

                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: xhr.responseJSON?.message || 'Failed to assign monitors',
                        confirmButtonColor: '#3085d6',
                        position: 'top-end',
                        toast: true,
                        timer: 5000,
                        showConfirmButton: false
                    });
                }
            });
        });

        // Filter handlers
        function applyFilters() {
            currentFilters = {
                regionFilter: $('#regionFilter').val(),
                statusFilter: $('#statusFilter').val(),
                genderFilter: $('#genderFilter').val(),
                centreFilter: $('#centreFilter').val(),
                districtFilter: $('#districtFilter').val(),
                sessionFilter: $('#sessionFilter').val(),
                phaseFilter: $('#phaseFilter').val()
            };
            loadAndRenderTable();
        }

        $('#regionFilter, #statusFilter, #genderFilter, #districtFilter, #sessionFilter, #phaseFilter').on('change', applyFilters);
        $('#centreFilter').on('select2:select select2:unselect', applyFilters);

        $('#resetFiltersBtn').on('click', function() {
            $('#regionFilter, #statusFilter, #genderFilter, #districtFilter, #sessionFilter, #phaseFilter').val('').trigger('change');
            $('#centreFilter').val(null).trigger('change.select2');
            currentFilters = {
                regionFilter: '',
                statusFilter: '',
                genderFilter: '',
                centreFilter: '',
                districtFilter: '',
                sessionFilter: '',
                phaseFilter: ''
            };
            loadAndRenderTable();
        });

                // Edit button handler
                $(document).on('click', '.edit-btn', function(e) {
                    e.preventDefault();
                    var nationalId = $(this).data('id');

                    Swal.fire({
                        title: 'Loading...',
                        allowOutsideClick: false,
                        didOpen: () => Swal.showLoading()
                    });

                    $.get('/ExamMonitors/GetMonitor', { nationalId: nationalId })
                        .done(function(data) {
                            Swal.close();
                            $('#editNationalId').val(data.nationalId || data.NationalId);
                            $('#editFirstName').val(data.firstName || data.FirstName);
                            $('#editLastName').val(data.lastName || data.LastName);
                            $('#editGender').val(data.sex || data.Sex);
                            $('#editStatus').val(data.status || data.Status);
                            $('#editRegion').val(data.region || data.Region);
                            $('#editPhone').val(data.phone || data.Phone);
                            $('#editCentre').val(data.centre || data.Centre);
                            $('#editStation').val(data.station || data.Station);
                            $('#editMonitorModal').modal('show');
                        })
                        .fail(function(xhr) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: xhr.status === 404 ? 'Monitor not found' : 'Error loading monitor data',
                                confirmButtonColor: '#153355'
                            });
                        });
                });

                // Save edit handler
                $('#saveEditBtn').click(function() {
                    Swal.fire({
                        title: 'Saving...',
                        allowOutsideClick: false,
                        didOpen: () => Swal.showLoading()
                    });

                    $.ajax({
                        url: '@Url.Action("UpdateMonitor", "ExamMonitors")',
                        type: 'POST',
                        data: {
                            nationalId: $('#editNationalId').val(),
                            firstName: $('#editFirstName').val(),
                            lastName: $('#editLastName').val(),
                            sex: $('#editGender').val(),
                            status: $('#editStatus').val(),
                            region: $('#editRegion').val(),
                            phone: $('#editPhone').val(),
                            centre: $('#editCentre').val(),
                            station: $('#editStation').val()
                        },
                        success: function(response) {
                            Swal.close();
                            if (response && response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: response.message,
                                    confirmButtonColor: '#153355'
                                });
                                $('#editMonitorModal').modal('hide');
                                loadAndRenderTable(); // Refresh the table
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: (response && response.message) || 'Unknown error occurred',
                                    confirmButtonColor: '#153355'
                                });
                            }
                        },
                        error: function(xhr) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: (xhr.responseJSON && xhr.responseJSON.message) || 'Error updating monitor',
                                confirmButtonColor: '#153355'
                            });
                        }
                    });
                });

                // Delete button handler - using document for delegation
                $(document).on('click', '.delete-btn', function(e) {
                    e.preventDefault();
                    e.stopPropagation();

                    var nationalId = $(this).data('id');
                    var $button = $(this);

                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#153355',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!',
                        allowOutsideClick: false
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                title: 'Deleting...',
                                allowOutsideClick: false,
                                didOpen: () => Swal.showLoading()
                            });

                            $.ajax({
                                url: '/ExamMonitors/DeleteMonitor',
                                type: 'POST',
                                data: {
                                    nationalId: nationalId,
                                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                },
                                success: function(response) {
                                    Swal.close();
                                    if (response && response.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Deleted!',
                                            text: response.message || 'Monitor deleted successfully',
                                            confirmButtonColor: '#153355'
                                        }).then(() => {
                                            $button.closest('tr').fadeOut(400, function() {
                                                table.row(this).remove().draw(false);
                                            });
                                        });
                                    } else {
                                        showError(response?.message || 'Failed to delete monitor');
                                    }
                                },
                                error: function(xhr) {
                                    Swal.close();
                                    showError(xhr.responseJSON?.message || xhr.statusText);
                                }
                            });
                        }
                    });
                });

                function showError(message) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: message,
                        confirmButtonColor: '#153355'
                    });
                }

                function showRawData() {
                    $('#monitorDataContainer').hide();
                    $('#rawDataFallback').show();
                    $.ajax({
                        url: '/ExamMonitors/GetExamMonitors',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(currentFilters),
                        success: function(response) {
                            $('#rawDataDisplay').text(JSON.stringify(response, null, 2));
                        },
                        error: function(xhr) {
                            $('#rawDataDisplay').text("Error loading data: " + xhr.responseText);
                        }
                    });
                }
            });
                     
        </script>

        <script>
                        $(document).ready(function() {
                // Show modal when Add Monitor button is clicked
                $('#addMonitorBtn').click(function() {
                    $('#addMonitorModal').modal('show');
                });

                // Handle form submission
                $('#saveMonitorBtn').click(function() {
                    // Validate form
                    if (!$('#addMonitorForm')[0].checkValidity()) {
                        $('#addMonitorForm')[0].reportValidity();
                        return;
                    }

                    // Show loading state
                    Swal.fire({
                        title: 'Saving...',
                        allowOutsideClick: false,
                        didOpen: () => Swal.showLoading()
                    });

                    // Collect form data
                    var formData = {
                        nationalId: $('#nationalId').val(),
                        firstName: $('#firstName').val(),
                        lastName: $('#lastName').val(),
                        sex: $('#gender').val(),
                        status: $('#status').val(),
                        region: $('#region').val(),
                        phone: $('#phone').val(),
                        age: $('#age').val(),
                        centre: $('#centre').val(),
                        station: $('#station').val(),
                        district: $('#district').val(),
                        qualification: $('#qualification').val(),
                        experience: $('#experience').val()
                    };

                    // Submit via AJAX
                    $.ajax({
                        url: '@Url.Action("Create", "ExamMonitors")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(formData),
                        success: function(response) {
                            Swal.close();
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: 'Monitor added successfully',
                                    confirmButtonColor: '#153355'
                                });
                                $('#addMonitorModal').modal('hide');
                                $('#addMonitorForm')[0].reset();

                                // Refresh DataTable if exists
                                if (typeof table !== 'undefined') {
                                    table.ajax.reload();
                                }
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: response.message || 'Failed to add monitor',
                                    confirmButtonColor: '#153355'
                                });
                            }
                        },
                        error: function(xhr) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: xhr.responseJSON?.message || 'An error occurred',
                                confirmButtonColor: '#153355'
                            });
                        }
                    });
                });
            });
        </script>


    <script>
        $(document).ready(function () {
            $("#regionFilter").change(function () {
                var regionCode = $(this).val();
                var districtDropdown = $("#districtFilter");

                districtDropdown.empty();
                districtDropdown.append('<option value="">All Districts</option>');

                if (regionCode) {
                    $.getJSON('/ExamMonitorsReports/GetDistrictsByRegion', { regionCode: regionCode }, function (data) {
                        $.each(data, function (i, district) {
                            districtDropdown.append('<option value="' + district.value + '">' + district.text + '</option>');
                        });
                    });
                }
            });
        });
    </script>
}



<script>
    $(document).ready(function () {
    @if (TempData["SuccessMessage"] != null)
    {
                <text>
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: '@TempData["SuccessMessage"]',
                            showConfirmButton: false,
                            timer: 2000
                        });
                </text>
    }
    else if (TempData["ErrorMessage"] != null)
    {
                <text>
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: '@TempData["ErrorMessage"]',
                            showConfirmButton: true
                        });
                </text>
    }


                            });
</script>


