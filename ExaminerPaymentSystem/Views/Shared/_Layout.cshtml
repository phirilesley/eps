@inject SignInManager<ApplicationUser> SignInManager
@inject ISubjectsRepository subjectRepo
@inject IExamCodesRepository examCodeRepo
@inject IPaperMarkingRateRepository papercodesRepo
@inject IVenueRepository venueRepo
@inject IActivityRepository activityRepo
@inject INavigationModuleCatalog navigationModules
@using ExaminerPaymentSystem.Interfaces.ExaminerRecruitmentInterface
@inject IExaminerRecruitmentVenueDetailsRepository ExaminerRecruitsVenue
@inject Microsoft.Extensions.Options.IOptions<AppInfo> AppInfo
@using ExaminerPaymentSystem.ViewModels.Layout

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] -    @AppInfo.Value.SystemName</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
       <link href="~/lib/font-awesome/css/all.css" rel="stylesheet" />
    <link href="~/css/home.css" rel="stylesheet" />
@*     <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" /> *@

    <link href="~/css/datatables.css" rel="stylesheet" />
    <link href="~/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/css/buttons.dataTables.min.css" rel="stylesheet" />


    <link rel="icon" href="~/favicon.ico" type="image/x-icon" />
    <link rel="shortcut icon" href="~/favicon.ico" type="image/x-icon" />

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />


    <link rel="stylesheet" href="~/ExaminerPaymentSystem.styles.css" asp-append-version="true" />
    <link href="~/css/select2.min.css" rel="stylesheet" />
    <link href="~/css/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    <link href="~/css/select2-bootstrap-5-theme.rtl.min.css" rel="stylesheet" />



    <script src="~/js/jquery-3.6.0.min.js"></script>

    <script src="~/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script src="~/js/dataTables.buttons.min.js"></script>
    <script src="~/js/jszip.min.js"></script>
    <script src="~/js/pdfmake.min.js"></script>
    <script src="~/js/vfs_fonts.js"></script>
    <script src="~/js/buttons.html5.min.js"></script>
    <script src="~/js/buttons.print.min.js"></script>
    <script src="~/js/select2.min.js"></script>

    @*     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script> *@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" integrity="sha384-tViUnnbYAV00FLIhhi3v/dWt3Jxw4gZQcNoSCxCIFNJVCx7/D55/wXsrNIRANwdD" crossorigin="anonymous">

    <script src="~/js/site.js" asp-append-version="true"></script>


    <script src="~/js/sweetalert2.all.js"></script>



</head>
<body>
    @{
        var subjects = (await subjectRepo.GetAllPaperCodes()).ToList();
        var examCodes = (await examCodeRepo.GetAllExamCodes()).ToList();
        var venues = (await venueRepo.VenuesGetAll()).ToList();
        var activities = (await activityRepo.GetAllActivitiesAsync()).ToList();
        var examinerRecruitsVenues = (await ExaminerRecruitsVenue.GetAllAsync()).ToList();

        var roles = LayoutRoleHelper.FromUser(User);
        var modules = navigationModules.GetModules(roles);

        var layoutModel = new LayoutNavigationModel(
            roles,
            AppInfo.Value.SystemName,
            examCodes.Where(code => code.ACTIVATED_SESSION == "Activated"),
            activities,
            venues,
            examinerRecruitsVenues,
            Newtonsoft.Json.JsonConvert.SerializeObject(subjects),
            modules);

        var subjectArray = layoutModel.SubjectsJson;
    }

    @await Html.PartialAsync("~/Views/Shared/Layout/_NavigationMenu.cshtml", layoutModel)
    @await Html.PartialAsync("~/Views/Shared/Layout/_NavigationModals.cshtml", layoutModel)







 
    <div class="container mb-4">
            <main role="main" class="pb-3">

                 @if (TempData["SweetAlert"] != null)
    {
        <script>
            $(document).ready(function () {
                var alertData = @Html.Raw(TempData["SweetAlert"]);
                Swal.fire(alertData);
            });
        </script>
    }
                @RenderBody()
            </main>
 
    </div>

    <footer class="footer text-white" style="background: linear-gradient(135deg, #0d2440, #153355);">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6 text-center text-md-start mb-3 mb-md-0">
                    <div class="d-flex align-items-center justify-content-center justify-content-md-start">
                        <img src="~/Images/logo.jpeg" alt="Logo" style="height: 30px; width: 30px; margin-right: 10px;" class="footer-logo">
                        <span class="fw-normal">&copy; @DateTime.Now.Year -    @AppInfo.Value.SystemName</span>
                    </div>
                </div>
                <div class="col-md-6 text-center text-md-end">
                    <div class="footer-links">
                        <a href="#" class="text-white mx-2 text-decoration-none hover-underline">Privacy Policy</a>
                        <a href="#" class="text-white mx-2 text-decoration-none hover-underline">Terms of Service</a>
                        <a href="#" class="text-white mx-2 text-decoration-none hover-underline">Contact Us</a>
                    </div>
                </div>
            </div>
        </div>
    </footer>

    <style>
      
        .footer {
            box-shadow: 0 -5px 15px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Use a suitable font family */
        }

            .footer::before {
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 3px;
                background: linear-gradient(90deg, red, black, #ffc107);
            }

        .footer-logo {
            transition: transform 0.3s ease;
        }

            .footer-logo:hover {
                transform: rotate(15deg) scale(1.1);
            }

        .hover-underline {
            position: relative;
            padding-bottom: 2px;
        }

            .hover-underline::after {
                content: "";
                position: absolute;
                bottom: 0;
                left: 0;
                width: 0;
                height: 1px;
                background-color: white;
                transition: width 0.3s ease;
            }

            .hover-underline:hover::after {
                width: 100%;
            }

        .footer-links a {
            transition: all 0.3s ease;
        }

            .footer-links a:hover {
                color: #ffc107 !important;
                transform: translateY(-2px);
            }
    </style>



     <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#approveScriptsExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#approveScriptsSubject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#approveScriptsSubject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#approveScriptsPaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#approveScriptsregionCodeContainer').show();
                        $('#approveScriptsregionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#approveScriptsregionCodeContainer').hide();
                        $('#approveScriptsregionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#approveScriptsregionCodeContainer').hide();
                    $('#approveScriptsregionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>
  

    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#exListExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#exListSubject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#exListSubject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#exListPaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#exListregionCodeContainer').show();
                        $('#exListregionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#exListregionCodeContainer').hide();
                        $('#exListregionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#exListregionCodeContainer').hide();
                    $('#exListregionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#exTListExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#exTListSubject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#exTListSubject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#exTListPaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#exTListregionCodeContainer').show();
                        $('#exTListregionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#exTListregionCodeContainer').hide();
                        $('#exTListregionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#exTListregionCodeContainer').hide();
                    $('#exTListregionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#usersExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#usersSubject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#usersSubject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#usersPaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));


                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#usersregionCodeContainer').show();
                        $('#usersregionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#usersregionCodeContainer').hide();
                        $('#usersregionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#usersregionCodeContainer').hide();
                    $('#usersregionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>


 
    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

         
            $('#reportsExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#reportsSubject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

               
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

             
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

        
            $('#reportsSubject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#reportsPaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#regionCodeContainer').show();
                        $('#regionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#regionCodeContainer').hide();
                        $('#regionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#regionCodeContainer').hide();
                    $('#regionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                 
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                console.log(paperCode);
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>



    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#ExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#Subject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#Subject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#PaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#regionCodeContainer').show();
                        $('#regionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#regionCodeContainer').hide();
                        $('#regionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#regionCodeContainer').hide();
                    $('#regionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#tandsApprovalExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#tandsApprovalSubject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#tandsApprovalSubject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#tandsApprovalPaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#atregionCodeContainer').show();
                        $('#atregionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#atregionCodeContainer').hide();
                        $('#atregionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#atregionCodeContainer').hide();
                    $('#atregionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>

      <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#tandsApproval2ExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#tandsApproval2Subject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#tandsApproval2Subject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#tandsApproval2PaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#at2regionCodeContainer').show();
                        $('#at2regionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#at2regionCodeContainer').hide();
                        $('#at2regionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#at2regionCodeContainer').hide();
                    $('#at2regionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#ExamCode4').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#Subject4');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#Subject4').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#PaperCode4');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#regionCodeContainer').show();
                        $('#regionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#regionCodeContainer').hide();
                        $('#regionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#regionCodeContainer').hide();
                    $('#regionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Populate subjects when exam code changes
            $('#registerExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#registerSubject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Populate paper codes and check region code condition
            $('#registerSubject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#registerPaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#regionCodeContainer').show();
                        $('#regionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#regionCodeContainer').hide();
                        $('#regionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#regionCodeContainer').hide();
                    $('#regionCode').removeAttr('required');
                }

                // Make AJAX call to get paper codes
                if (selectedSubjectId) {
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Populate subjects when exam code changes
            $('#teamExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#teamSubject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Populate paper codes and check region code condition
            $('#teamSubject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#teamPaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#teamregionCodeContainer').show();
                        $('#teamregionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#teamregionCodeContainer').hide();
                        $('#teamregionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#teamregionCodeContainer').hide();
                    $('#teamregionCode').removeAttr('required');
                }

                // Make AJAX call to get paper codes
                if (selectedSubjectId) {
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#venueExamCode').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#venueSubject');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#venueSubject').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#venuePaperCode');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#tregionCodeContainer').show();
                        $('#tregionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#tregionCodeContainer').hide();
                        $('#tregionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#tregionCodeContainer').hide();
                    $('#tregionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            var subjects = @Html.Raw(subjectArray);

            // Function to populate subject dropdown based on selected exam code
            $('#venueExamCode2').change(function () {
                console.log("Exam code selection changed");
                var selectedExamCode = $(this).val();
                console.log("Selected exam code: " + selectedExamCode);
                var subjectSelect = $('#venueSubject2');
                subjectSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Subject --'));

                // Filter subjects based on selected exam code and remove duplicates
                var uniqueSubjects = {};
                subjects.forEach(function (subject) {
                    var subSubIdPrefix = subject.SUB_SUB_ID.substring(0, 3);
                    if (subSubIdPrefix === selectedExamCode) {
                        uniqueSubjects[subject.SUB_SUB_ID] = subject.SUB_SUBJECT_DESC;
                    }
                });

                // Populate subject dropdown with unique subjects
                Object.keys(uniqueSubjects).forEach(function (key) {
                    var optionText = key.substring(key.length - 4) + '-' + uniqueSubjects[key];
                    subjectSelect.append($('<option></option>').attr('value', key).text(optionText));
                    console.log("Appended subject: " + key);
                });
            });

            // Function to populate paper code dropdown based on selected subject
            $('#venueSubject2').change(function () {
                console.log("Subject selection changed");
                var selectedSubjectId = $(this).val();
                console.log("Selected subject ID: " + selectedSubjectId);
                var paperCodeSelect = $('#venuePaperCode2');
                paperCodeSelect.empty().append($('<option></option>').attr('value', '').text('-- Select Paper Code --'));

                if (selectedSubjectId && selectedSubjectId.length >= 4) {
                    var subjectCheck = selectedSubjectId.substring(3, 4);
                    console.log("Checking subject at 4th position: " + subjectCheck);

                    if (subjectCheck === '7') {
                        console.log("Subject has '7' at 4th position, showing regionCode dropdown.");
                        $('#ftregionCodeContainer').show();
                        $('#ftregionCode').attr('required', 'required');
                    } else {
                        console.log("Subject does not have '7' at 4th position, hiding regionCode dropdown.");
                        $('#ftregionCodeContainer').hide();
                        $('#ftregionCode').removeAttr('required');
                    }
                } else {
                    console.log("No subject selected or too short, hiding regionCode dropdown.");
                    $('#ftregionCodeContainer').hide();
                    $('#ftregionCode').removeAttr('required');
                }

                if (selectedSubjectId) {
                    // Make an AJAX call to get the paper codes
                    $.ajax({
                        url: '@Url.Action("GetPaperCodes", "Subjects")',
                        type: 'GET',
                        data: { subjectCode: selectedSubjectId },
                        success: function (data) {
                            data.forEach(function (paperCode) {
                                paperCodeSelect.append($('<option></option>').attr('value', paperCode.ppR_PAPER_CODE).text(paperCode.ppR_PAPER_CODE));
                                console.log("Appended paper code: " + paperCode.ppR_PAPER_CODE);
                            });
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching paper codes: " + error);
                        }
                    });
                }
            });
        });
    </script>






    @* examiner recruitment modals *@


    <!-- Modal -->
    <div class="modal fade" id="examinerModalForm" tabindex="-1" aria-labelledby="examinerModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <!-- Added modal-lg for wider modal -->
            <div class="modal-content">
                <form id="examinerInvitaionForm" asp-controller="ExaminerRecruitmentInvitation" asp-action="InviteIndex" method="get">
                    <div class="modal-header">
                        <h5 class="modal-title text-black" id="examinerModalLabel">Select Session</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row g-3">
                            <!-- Training Level -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="Experience" class="levelSelect form-select academicQualification" required>
                                        <option value="">Select Training Level</option>
                                        <option value="A">A-Level</option>
                                        <option value="O">O-Level</option>
                                        <option value="G7">G-7</option>
                                    </select>
                                    <label for="levelSelect">Level to be trained</label>
                                </div>
                            </div>

                            <!-- Subject -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="Subject" class="subjectSelect form-select subject">
                                        <option value="">Select training subject</option>
                                    </select>
                                    <label for="subjectSelect">Training Subject</label>
                                </div>
                            </div>

                            <!-- Paper Code -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="PaperCode" class="paperCodeSelect form-select">
                                        <option value="">Select training paper code</option>
                                    </select>
                                    <label for="paperCodeSelect">Training Paper Code</label>
                                </div>
                            </div>

                            <!-- Region -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="Region" class="form-select regionSelect">
                                        <option value="">Select your region</option>
                                        <option value="01">01-Harare</option>
                                        <option value="02">02-Manicaland</option>
                                        <option value="03">03-Mashonaland East</option>
                                        <option value="04">04-Matabeleland North</option>
                                        <option value="05">05-Midlands</option>
                                        <option value="06">06-Masvingo</option>
                                        <option value="07">07-Mashonaland Central</option>
                                        <option value="08">08-Mashonaland West</option>
                                        <option value="09">09-Matabeleland South</option>
                                        <option value="10">10-Bulawayo</option>
                                    </select>
                                    <label>Region</label>
                                </div>
                            </div>


                            <!-- Venue details -->
                            <div class="form-group">
                                <label for="Venue" class="text-black">Venues</label>
                                <select name="ExaminerRecruitsVenue" class="form-control venue" required>
                                    <option value="">-- Select Venue --</option>
                                    @foreach (var venue in examinerRecruitsVenues)
                                    {

                                        <option value="@venue.Id">@venue.VenueName</option>

                                    }
                                </select>
                            </div>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-block cancelBtn" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary btn-block">Set</button>
                    </div>
                </form>

            </div>
        </div>
    </div>



    @* invited trainee examiners modal *@

    <!-- Modal -->
    <div class="modal fade" id="invitedTraineeExaminerModalForm" tabindex="-1" aria-labelledby="invitedTraineeExaminerModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <!-- Added modal-lg for wider modal -->
            <div class="modal-content">
                <form id="invitedTraineeExaminerForm" asp-controller="ExaminerRecruitmentEmailInvitation" asp-action="EmailInviteIndex" method="get">
                    <div class="modal-header">
                        <h5 class="modal-title text-black" id="invitedTraineeExaminerModalLabel">Select Session</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row g-3">
                            <!-- Training Level -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="Experience" class="levelSelect form-select academicQualification" required>
                                        <option value="">Select Training Level</option>
                                        <option value="A">A-Level</option>
                                        <option value="O">O-Level</option>
                                        <option value="G7">G-7</option>
                                    </select>
                                    <label for="levelSelect">Level to be trained</label>
                                </div>
                            </div>

                            <!-- Subject -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="Subject" class="subjectSelect form-select subject">
                                        <option value="">Select training subject</option>
                                    </select>
                                    <label for="subjectSelect">Training Subject</label>
                                </div>
                            </div>

                            <!-- Paper Code -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="PaperCode" class="paperCodeSelect form-select">
                                        <option value="">Select training paper code</option>
                                    </select>
                                    <label for="paperCodeSelect">Training Paper Code</label>
                                </div>
                            </div>

                            <!-- Region -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="Region" class="form-select regionSelect">
                                        <option value="">Select your region</option>
                                        <option value="01">01-Harare</option>
                                        <option value="02">02-Manicaland</option>
                                        <option value="03">03-Mashonaland East</option>
                                        <option value="04">04-Matabeleland North</option>
                                        <option value="05">05-Midlands</option>
                                        <option value="06">06-Masvingo</option>
                                        <option value="07">07-Mashonaland Central</option>
                                        <option value="08">08-Mashonaland West</option>
                                        <option value="09">09-Matabeleland South</option>
                                        <option value="10">10-Bulawayo</option>
                                    </select>
                                    <label>Region</label>
                                </div>
                            </div>


                            <!-- Venue details -->
                            @*                             <div class="form-group">
                            <label for="Venue" class="text-black">Venues</label>
                            <select name="ExaminerRecruitsVenue" class="form-control venue" required>
                            <option value="">-- Select Venue --</option>
                            @foreach (var venue in examinerRecruitsVenues)
                            {

                            <option value="@venue.Id">@venue.VenueName</option>

                            }
                            </select>
                            </div> *@

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-block cancelBtn" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary btn-block">Set</button>
                    </div>
                </form>

            </div>
        </div>
    </div>


    <!-- register modal -->
    <div class="modal fade" id="examinerRegisterModal" tabindex="-1" aria-labelledby="examinerRegisterModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form id="examinerRegisterForm" asp-controller="ExaminerRecruitmentRegister" asp-action="RegisterIndex" method="get">
                    <div class="modal-header">
                        <h5 class="modal-title text-black" id="examinerRegisterModalLabel">Select Session</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row g-3">
                            <!-- Training Level -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="Experience" class="levelSelect form-select academicQualification" required>
                                        <option value="">Select Training Level</option>
                                        <option value="A">A-Level</option>
                                        <option value="O">O-Level</option>
                                        <option value="G7">G-7</option>
                                    </select>
                                    <label for="levelSelect">Level to be trained</label>
                                </div>
                            </div>

                            <!-- Subject -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="Subject" class="subjectSelect form-select subject">
                                        <option value="">Select training subject</option>
                                    </select>
                                    <label for="subjectSelect">Training Subject</label>
                                </div>
                            </div>

                            <!-- Paper Code -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="PaperCode" class="paperCodeSelect form-select">
                                        <option value="">Select training paper code</option>
                                    </select>
                                    <label for="paperCodeSelect">Training Paper Code</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-block cancelBtn" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary btn-block">Select</button>
                    </div>
                </form>
            </div>
        </div>
    </div>




    <!-- Assesment modal -->
    <div class="modal fade" id="examinerAssesmentModal" tabindex="-1" aria-labelledby="examinerAssesmentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form id="examinerAssementForm" asp-controller="ExaminerRecruitmentAssessment" asp-action="GradingIndex" method="get">
                    <div class="modal-header">
                        <h5 class="modal-title text-black" id="examinerAssesmentModalLabel">Select Session</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row g-3">
                            <!-- Training Level -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="Experience" class="levelSelect form-select academicQualification" required>
                                        <option value="">Select Training Level</option>
                                        <option value="A">A-Level</option>
                                        <option value="O">O-Level</option>
                                        <option value="G7">G-7</option>
                                    </select>
                                    <label for="levelSelect">Level to be trained</label>
                                </div>
                            </div>

                            <!-- Subject -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="Subject" class="subjectSelect form-select subject">
                                        <option value="">Select training subject</option>
                                    </select>
                                    <label for="subjectSelect">Training Subject</label>
                                </div>
                            </div>

                            <!-- Paper Code -->
                            <div class="col-12 col-md-12 mb-3">
                                <div class="form-floating">
                                    <select name="PaperCode" class="paperCodeSelect form-select">
                                        <option value="">Select training paper code</option>
                                    </select>
                                    <label for="paperCodeSelect">Training Paper Code</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-block cancelBtn" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary btn-block">Select</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Attach event listener to elements with the class 'cancelBtn'
        document.querySelectorAll('.cancelBtn').forEach(function (button) {
            button.addEventListener('click', function () {
                var form1 = document.getElementById('examinerRegisterForm');
                var form2 = document.getElementById('examinerInvitaionForm');
                var form3 = document.getElementById('examinerAssementForm');
                var form4 = document.getElementById('invitedTraineeExaminerForm');

                if (form1) form1.reset();
                if (form2) form2.reset();
                if (form3) form3.reset();
                if (form3) form4.reset();
            });
        });

    </script>


    @*     filter subjectst Kasu *@
    <script>
        $(document).ready(function () {
            // Delegate event handler for dynamically added rows
            $(document).on('change', '.academicQualification', function () {
                const $row = $(this).closest('.teaching-experience-row');
                const selectedValue = $(this).val();
                let prefix = '';

                // Determine prefix based on selected value
                if (selectedValue === 'A') {
                    prefix = '6';
                } else if (selectedValue === 'O') {
                    prefix = '4';
                } else if (selectedValue === 'G7') {
                    prefix = '7';
                }

                const $subjectDropdown = $row.find('.subject'); // Find the corresponding subject dropdown
                if (prefix) {
                    $.ajax({
                        url: `/ExaminerRecruitment/GetSubjects`,
                        type: 'GET',
                        data: { prefix: prefix },
                        success: function (data) {
                            $subjectDropdown.empty(); // Reset options
                            $subjectDropdown.append('<option value="">Select Subject</option>'); // Default option

                            $.each(data, function (index, subject) {
                                $subjectDropdown.append(
                                    $('<option>', {
                                        value: subject.suB_SUBJECT_CODE, // Use the appropriate field for the value
                                        text: subject.suB_SUBJECT_DESC, // Use the appropriate field for the display text
                                    })
                                );
                            });
                        },
                        error: function () {
                            alert('Error fetching subjects. Please try again.');
                        },
                    });
                } else {
                    $subjectDropdown.empty().append('<option value="">Select Subject</option>'); // Reset dropdown if no level selected
                }
            });

            // Add and remove rows dynamically
            $(document).on('click', '.add-row', function () {
                const $newRow = $('.teaching-experience-row:first').clone();
                $newRow.find('input, select').val(''); // Clear input values
                $newRow.find('.remove-row').show(); // Show remove button

                // Update the name attributes with the correct index
                const rowCount = $('#teachingExperienceList .teaching-experience-row').length;
                $newRow.find('input, select').each(function () {
                    const name = $(this).attr('name');
                    const newName = name.replace(/\[\d+\]/, `[${rowCount}]`); // Replace the index with the new row count
                    $(this).attr('name', newName);
                });

                $('#teachingExperienceList').append($newRow);
            });

            $(document).on('click', '.remove-row', function () {
                $(this).closest('.teaching-experience-row').remove();
            });




            $(document).ready(function () {
                $('.levelSelect').on('change', function () {
                    const selectedLevelValue = $(this).val();
                    let subjectPrefix = '';

                    // Determine prefix based on selected value
                    if (selectedLevelValue === 'A') {
                        subjectPrefix = '6';
                    } else if (selectedLevelValue === 'O') {
                        subjectPrefix = '4';
                    } else if (selectedLevelValue === 'G7') {
                        subjectPrefix = '7';
                    }

                    const $subjectDropdown = $('.subjectSelect'); // Find the corresponding subject dropdown

                    if (subjectPrefix) {
                        $.ajax({
                            url: `/ExaminerRecruitment/GetSubjectByLevelProfessional`,
                            type: 'GET',
                            data: { subjectPrefix: subjectPrefix },
                            success: function (data) {
                                $subjectDropdown.empty(); // Reset options
                                $subjectDropdown.append('<option value="">Select Subject</option>'); // Default option

                                $.each(data, function (index, subject) {
                                    $subjectDropdown.append(
                                        $('<option>', {
                                            value: subject.subSubjectCode,
                                            text: subject.subSubjectDesc
                                        })
                                    );
                                });
                            },
                            error: function (xhr, status, error) {
                                console.error('Error fetching subjects:', error);
                                alert('An error occurred while fetching subjects. Please try again.');
                            }
                        });
                    } else {
                        $subjectDropdown.empty().append('<option value="">Select Subject</option>'); // Reset dropdown if no level selected
                    }
                });
            });



            $(document).ready(function () {
                $(".subjectSelect").on("change", function () {
                    const subjectCode = $(this).val(); // Get selected subject code
                    const $paperCodeDropdown = $('.paperCodeSelect'); // Paper Code dropdown using ID

                    // Clear existing options and show loading indicator
                    $paperCodeDropdown.prop('disabled', true).empty().append('<option value="">Loading...</option>');

                    if (!subjectCode) {
                        $paperCodeDropdown.prop('disabled', false).empty().append('<option value="">Select subject first</option>');
                        return; // Exit if no subject is selected
                    }

                    // AJAX call to fetch paper codes
                    $.ajax({
                        url: `/ExaminerRecruitment/GetPaperCodesBySubjectCode`,
                        type: 'GET',
                        data: { subjectCode: subjectCode },
                        success: function (data) {
                            $paperCodeDropdown.empty(); // Reset options
                            $paperCodeDropdown.append('<option value="">Select Paper Code</option>'); // Default option

                            $.each(data, function (index, paperCode) {
                                $paperCodeDropdown.append(
                                    $('<option>', {
                                        value: paperCode,
                                        text: paperCode
                                    })
                                );
                            });
                            $paperCodeDropdown.prop('disabled', false); // Re-enable dropdown
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching paper codes:', error);
                            $paperCodeDropdown.prop('disabled', false).empty().append('<option value="">Error loading paper codes</option>');
                            alert('An error occurred while fetching paper codes. Please try again.');
                        }
                    });
                });
            });

            // document.getElementById('NationalId').addEventListener('input', function (event) {
            //     // Replace any character that is not a letter, digit, or space
            //     const regex = /[^A-Z0-9]/g; // Matches any character that's not uppercase A-Z or digit 0-9
            //     const input = event.target;

            //     // Transform input value to uppercase and remove invalid characters
            //     input.value = input.value.toUpperCase().replace(regex, '');
            // });

            // document.getElementById('PhoneHome').addEventListener('input', function (event) {
            //     const input = event.target;
            //     const value = input.value;

            //     // Ensure the input starts with '07'
            //     if (!value.startsWith('07')) {
            //         input.value = '07' + value.replace(/^0*/, '').substring(0); // Remove any leading zeros and ensure no duplicates
            //     }

            //     // Optionally enforce a maximum length for the phone number
            //     if (input.value.length > 10) {
            //         input.value = input.value.substring(0, 10); // Limit to 10 characters
            //     }
            // });

        });


        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll("input[type='text'], input[type='number'], textarea").forEach(input => {
                input.addEventListener("input", function () {
                    this.value = this.value.toUpperCase();
                });
            });
        });
    </script>



    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
